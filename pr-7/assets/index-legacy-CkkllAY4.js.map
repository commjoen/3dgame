{"version":3,"file":"index-legacy-CkkllAY4.js","sources":["../../src/main.js"],"sourcesContent":["/**\n * Ocean Adventure - Main Game Entry Point\n *\n * This is a placeholder implementation showing the basic structure\n * for the 3D underwater platform game. The actual game engine\n * implementation will be developed following the Copilot plan.\n */\n\nimport * as THREE from 'three'\n\n// Game configuration\nconst CONFIG = {\n  targetFPS: 60,\n  mobileFPS: 30,\n  canvasId: 'gameCanvas',\n  loadingId: 'loading',\n  uiId: 'ui',\n}\n\nclass OceanAdventure {\n  constructor() {\n    this.scene = null\n    this.camera = null\n    this.renderer = null\n    this.canvas = null\n    this.isLoaded = false\n    this.isMobile = this.detectMobile()\n\n    // Game state\n    this.starCount = 0\n    this.levelNumber = 1\n\n    console.log('üåä Ocean Adventure - Initializing...')\n  }\n\n  async initialize() {\n    try {\n      this.setupCanvas()\n      this.setupRenderer()\n      this.setupScene()\n      this.setupCamera()\n      this.setupLights()\n      this.setupEventListeners()\n\n      // Hide loading screen and show UI\n      this.hideLoading()\n      this.showUI()\n\n      // Start game loop\n      this.startGameLoop()\n\n      this.isLoaded = true\n      console.log('üéÆ Ocean Adventure - Ready to play!')\n    } catch (error) {\n      console.error('‚ùå Failed to initialize game:', error)\n    }\n  }\n\n  setupCanvas() {\n    this.canvas = document.getElementById(CONFIG.canvasId)\n    if (!this.canvas) {\n      throw new Error('Game canvas not found')\n    }\n  }\n\n  setupRenderer() {\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.canvas,\n      antialias: !this.isMobile, // Disable antialiasing on mobile for performance\n      alpha: false,\n    })\n\n    this.renderer.setSize(window.innerWidth, window.innerHeight)\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n    this.renderer.setClearColor(0x001122, 1) // Deep ocean blue\n\n    // Enable shadows for better visual quality\n    this.renderer.shadowMap.enabled = true\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap\n  }\n\n  setupScene() {\n    this.scene = new THREE.Scene()\n\n    // Add basic underwater environment\n    this.createUnderwaterEnvironment()\n    this.createPlayer()\n    this.createSampleStars()\n  }\n\n  setupCamera() {\n    this.camera = new THREE.PerspectiveCamera(\n      75, // Field of view\n      window.innerWidth / window.innerHeight, // Aspect ratio\n      0.1, // Near clipping plane\n      1000 // Far clipping plane\n    )\n\n    // Position camera behind and above the player\n    this.camera.position.set(0, 5, 10)\n    this.camera.lookAt(0, 0, 0)\n  }\n\n  setupLights() {\n    // Ambient light for underwater ambience\n    const ambientLight = new THREE.AmbientLight(0x404080, 0.4)\n    this.scene.add(ambientLight)\n\n    // Directional light simulating filtered sunlight\n    const directionalLight = new THREE.DirectionalLight(0x87ceeb, 0.8)\n    directionalLight.position.set(0, 50, 0)\n    directionalLight.castShadow = true\n    directionalLight.shadow.mapSize.width = 2048\n    directionalLight.shadow.mapSize.height = 2048\n    this.scene.add(directionalLight)\n  }\n\n  createUnderwaterEnvironment() {\n    // Create ocean floor\n    const floorGeometry = new THREE.PlaneGeometry(100, 100)\n    const floorMaterial = new THREE.MeshLambertMaterial({ color: 0x8b4513 })\n    const floor = new THREE.Mesh(floorGeometry, floorMaterial)\n    floor.rotation.x = -Math.PI / 2\n    floor.position.y = -5\n    floor.receiveShadow = true\n    this.scene.add(floor)\n\n    // Add some basic coral/rocks\n    for (let i = 0; i < 10; i++) {\n      const geometry = new THREE.SphereGeometry(0.5 + Math.random() * 1.5)\n      const material = new THREE.MeshLambertMaterial({\n        color: new THREE.Color().setHSL(Math.random() * 0.3, 0.7, 0.5),\n      })\n      const coral = new THREE.Mesh(geometry, material)\n      coral.position.set(\n        (Math.random() - 0.5) * 80,\n        -4 + Math.random() * 2,\n        (Math.random() - 0.5) * 80\n      )\n      coral.castShadow = true\n      this.scene.add(coral)\n    }\n  }\n\n  createPlayer() {\n    // Simple player representation (will be replaced with proper model)\n    const playerGeometry = new THREE.CapsuleGeometry(0.5, 1.5)\n    const playerMaterial = new THREE.MeshLambertMaterial({ color: 0x00ff88 })\n    this.player = new THREE.Mesh(playerGeometry, playerMaterial)\n    this.player.position.set(0, 0, 0)\n    this.player.castShadow = true\n    this.scene.add(this.player)\n  }\n\n  createSampleStars() {\n    this.stars = []\n\n    // Create glowing star collectibles\n    for (let i = 0; i < 5; i++) {\n      const starGeometry = new THREE.SphereGeometry(0.3)\n      const starMaterial = new THREE.MeshLambertMaterial({\n        color: 0xffd700,\n        emissive: 0xffd700,\n        emissiveIntensity: 0.3,\n      })\n\n      const star = new THREE.Mesh(starGeometry, starMaterial)\n      star.position.set(\n        (Math.random() - 0.5) * 20,\n        Math.random() * 8 - 2,\n        (Math.random() - 0.5) * 20\n      )\n\n      // Add simple rotation animation\n      star.userData = { rotationSpeed: 0.02 + Math.random() * 0.02 }\n\n      this.stars.push(star)\n      this.scene.add(star)\n    }\n  }\n\n  setupEventListeners() {\n    // Handle window resize\n    window.addEventListener('resize', () => this.onWindowResize())\n\n    // Basic movement controls (placeholder)\n    window.addEventListener('keydown', event => this.onKeyDown(event))\n\n    // Touch controls for mobile (placeholder)\n    if (this.isMobile) {\n      this.setupTouchControls()\n    }\n  }\n\n  setupTouchControls() {\n    // Setup virtual joystick\n    this.setupVirtualJoystick()\n\n    // Setup mobile action buttons\n    this.setupMobileButtons()\n\n    // Touch control state for general canvas interactions\n    this.touchState = {\n      startX: 0,\n      startY: 0,\n      currentX: 0,\n      currentY: 0,\n      isActive: false,\n    }\n\n    // General canvas touch events (for swipe gestures)\n    this.canvas.addEventListener('touchstart', event => {\n      event.preventDefault()\n      if (event.touches.length > 0) {\n        const touch = event.touches[0]\n        this.touchState.startX = touch.clientX\n        this.touchState.startY = touch.clientY\n        this.touchState.currentX = touch.clientX\n        this.touchState.currentY = touch.clientY\n        this.touchState.isActive = true\n      }\n    })\n\n    this.canvas.addEventListener('touchmove', event => {\n      event.preventDefault()\n      if (event.touches.length > 0 && this.touchState.isActive) {\n        const touch = event.touches[0]\n        this.touchState.currentX = touch.clientX\n        this.touchState.currentY = touch.clientY\n\n        // Calculate movement delta for swipe gestures\n        const deltaX = this.touchState.currentX - this.touchState.startX\n        const deltaY = this.touchState.currentY - this.touchState.startY\n\n        // Apply gentle swipe-based movement (subtle effect)\n        const moveSpeed = 0.05\n        const sensitivity = 3\n\n        if (Math.abs(deltaX) > 20) {\n          this.player.position.x += (deltaX / sensitivity) * moveSpeed * 0.01\n        }\n\n        if (Math.abs(deltaY) > 20) {\n          this.player.position.z += (deltaY / sensitivity) * moveSpeed * 0.01\n        }\n\n        this.updateCamera()\n      }\n    })\n\n    this.canvas.addEventListener('touchend', event => {\n      event.preventDefault()\n      this.touchState.isActive = false\n    })\n\n    this.canvas.addEventListener('touchcancel', event => {\n      event.preventDefault()\n      this.touchState.isActive = false\n    })\n  }\n\n  setupVirtualJoystick() {\n    const joystick = document.getElementById('virtualJoystick')\n    const knob = document.getElementById('joystickKnob')\n\n    if (!joystick || !knob) {\n      return\n    }\n\n    const joystickState = {\n      isActive: false,\n      centerX: 0,\n      centerY: 0,\n      currentX: 0,\n      currentY: 0,\n    }\n\n    const moveSpeed = 0.15\n\n    joystick.addEventListener('touchstart', event => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      if (event.touches.length > 0) {\n        const touch = event.touches[0]\n        const rect = joystick.getBoundingClientRect()\n\n        joystickState.isActive = true\n        joystickState.centerX = rect.left + rect.width / 2\n        joystickState.centerY = rect.top + rect.height / 2\n        joystickState.currentX = touch.clientX\n        joystickState.currentY = touch.clientY\n\n        this.updateJoystickKnob(knob, joystickState, rect)\n      }\n    })\n\n    joystick.addEventListener('touchmove', event => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      if (event.touches.length > 0 && joystickState.isActive) {\n        const touch = event.touches[0]\n        const rect = joystick.getBoundingClientRect()\n\n        joystickState.currentX = touch.clientX\n        joystickState.currentY = touch.clientY\n\n        // Calculate movement vector\n        const deltaX = joystickState.currentX - joystickState.centerX\n        const deltaY = joystickState.currentY - joystickState.centerY\n        const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY)\n        const maxDistance = rect.width / 2 - 20\n\n        // Normalize and apply movement\n        if (distance > 5) {\n          const normalizedX = deltaX / maxDistance\n          const normalizedY = deltaY / maxDistance\n\n          // Apply movement to player\n          this.player.position.x += normalizedX * moveSpeed * 0.03\n          this.player.position.z += normalizedY * moveSpeed * 0.03\n\n          this.updateCamera()\n        }\n\n        this.updateJoystickKnob(knob, joystickState, rect)\n      }\n    })\n\n    joystick.addEventListener('touchend', event => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      joystickState.isActive = false\n      knob.style.transform = 'translate(-50%, -50%)'\n    })\n\n    joystick.addEventListener('touchcancel', event => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      joystickState.isActive = false\n      knob.style.transform = 'translate(-50%, -50%)'\n    })\n  }\n\n  updateJoystickKnob(knob, joystickState, rect) {\n    const deltaX = joystickState.currentX - joystickState.centerX\n    const deltaY = joystickState.currentY - joystickState.centerY\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY)\n    const maxDistance = rect.width / 2 - 20\n\n    if (distance <= maxDistance) {\n      knob.style.transform = `translate(calc(-50% + ${deltaX}px), calc(-50% + ${deltaY}px))`\n    } else {\n      const angle = Math.atan2(deltaY, deltaX)\n      const x = Math.cos(angle) * maxDistance\n      const y = Math.sin(angle) * maxDistance\n      knob.style.transform = `translate(calc(-50% + ${x}px), calc(-50% + ${y}px))`\n    }\n  }\n\n  setupMobileButtons() {\n    const swimUpBtn = document.getElementById('swimUpBtn')\n    const swimDownBtn = document.getElementById('swimDownBtn')\n\n    if (swimUpBtn) {\n      swimUpBtn.addEventListener('touchstart', event => {\n        event.preventDefault()\n        event.stopPropagation()\n        this.mobileButtonState = { swimUp: true }\n      })\n\n      swimUpBtn.addEventListener('touchend', event => {\n        event.preventDefault()\n        event.stopPropagation()\n        this.mobileButtonState = { swimUp: false }\n      })\n    }\n\n    if (swimDownBtn) {\n      swimDownBtn.addEventListener('touchstart', event => {\n        event.preventDefault()\n        event.stopPropagation()\n        this.mobileButtonState = { swimDown: true }\n      })\n\n      swimDownBtn.addEventListener('touchend', event => {\n        event.preventDefault()\n        event.stopPropagation()\n        this.mobileButtonState = { swimDown: false }\n      })\n    }\n\n    // Initialize mobile button state\n    this.mobileButtonState = { swimUp: false, swimDown: false }\n  }\n\n  onWindowResize() {\n    this.camera.aspect = window.innerWidth / window.innerHeight\n    this.camera.updateProjectionMatrix()\n    this.renderer.setSize(window.innerWidth, window.innerHeight)\n  }\n\n  onKeyDown(event) {\n    // Basic movement controls (placeholder)\n    const moveSpeed = 0.2\n\n    switch (event.code) {\n      case 'ArrowUp':\n      case 'KeyW':\n        this.player.position.z -= moveSpeed\n        break\n      case 'ArrowDown':\n      case 'KeyS':\n        this.player.position.z += moveSpeed\n        break\n      case 'ArrowLeft':\n      case 'KeyA':\n        this.player.position.x -= moveSpeed\n        break\n      case 'ArrowRight':\n      case 'KeyD':\n        this.player.position.x += moveSpeed\n        break\n      case 'Space':\n        this.player.position.y += moveSpeed * 0.5\n        break\n      case 'ShiftLeft':\n        this.player.position.y -= moveSpeed * 0.5\n        break\n    }\n\n    // Update camera to follow player\n    this.updateCamera()\n  }\n\n  updateCamera() {\n    // Simple camera follow logic (will be improved)\n    const offset = new THREE.Vector3(0, 5, 10)\n    const targetPosition = this.player.position.clone().add(offset)\n    this.camera.position.lerp(targetPosition, 0.1)\n    this.camera.lookAt(this.player.position)\n  }\n\n  startGameLoop() {\n    const animate = () => {\n      requestAnimationFrame(animate)\n      this.update()\n      this.render()\n    }\n    animate()\n  }\n\n  update() {\n    if (!this.isLoaded) {\n      return\n    }\n\n    // Handle mobile button states\n    if (this.isMobile && this.mobileButtonState) {\n      const moveSpeed = 0.2\n      if (this.mobileButtonState.swimUp) {\n        this.player.position.y += moveSpeed * 0.5\n        this.updateCamera()\n      }\n      if (this.mobileButtonState.swimDown) {\n        this.player.position.y -= moveSpeed * 0.5\n        this.updateCamera()\n      }\n    }\n\n    // Animate stars\n    this.stars.forEach(star => {\n      star.rotation.y += star.userData.rotationSpeed\n      star.rotation.x += star.userData.rotationSpeed * 0.5\n    })\n\n    // Check star collection (simple distance check)\n    this.checkStarCollection()\n  }\n\n  checkStarCollection() {\n    this.stars.forEach((star, index) => {\n      const distance = this.player.position.distanceTo(star.position)\n      if (distance < 1.0) {\n        // Collect star\n        this.scene.remove(star)\n        this.stars.splice(index, 1)\n        this.starCount++\n        this.updateUI()\n\n        console.log(`‚≠ê Star collected! Total: ${this.starCount}`)\n\n        // Check if level is complete\n        if (this.stars.length === 0) {\n          this.levelComplete()\n        }\n      }\n    })\n  }\n\n  levelComplete() {\n    console.log('üéâ Level Complete!')\n    this.levelNumber++\n    // Reset level with new stars\n    this.createSampleStars()\n    this.updateUI()\n  }\n\n  updateUI() {\n    document.getElementById('starCount').textContent = this.starCount\n    document.getElementById('levelNumber').textContent = this.levelNumber\n  }\n\n  render() {\n    if (this.renderer && this.scene && this.camera) {\n      this.renderer.render(this.scene, this.camera)\n    }\n  }\n\n  hideLoading() {\n    const loadingElement = document.getElementById(CONFIG.loadingId)\n    if (loadingElement) {\n      loadingElement.classList.add('hidden')\n    }\n  }\n\n  showUI() {\n    const uiElement = document.getElementById(CONFIG.uiId)\n    if (uiElement) {\n      uiElement.classList.remove('hidden')\n    }\n    this.updateUI()\n  }\n\n  detectMobile() {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n      navigator.userAgent\n    )\n  }\n}\n\n// Initialize the game when the page loads\nwindow.addEventListener('DOMContentLoaded', async () => {\n  const game = new OceanAdventure()\n  await game.initialize()\n})\n\n// Handle WebGL context loss\nwindow.addEventListener('webglcontextlost', event => {\n  event.preventDefault()\n  console.warn('WebGL context lost')\n})\n\nwindow.addEventListener('webglcontextrestored', () => {\n  console.log('WebGL context restored')\n  // Reinitialize game here if needed\n})\n"],"names":["CONFIG","OceanAdventure","constructor","this","scene","camera","renderer","canvas","isLoaded","isMobile","detectMobile","starCount","levelNumber","console","log","initialize","setupCanvas","setupRenderer","setupScene","setupCamera","setupLights","setupEventListeners","hideLoading","showUI","startGameLoop","error","document","getElementById","Error","THREE.WebGLRenderer","antialias","alpha","setSize","window","innerWidth","innerHeight","setPixelRatio","Math","min","devicePixelRatio","setClearColor","shadowMap","enabled","type","THREE.PCFSoftShadowMap","THREE.Scene","createUnderwaterEnvironment","createPlayer","createSampleStars","THREE.PerspectiveCamera","position","set","lookAt","ambientLight","THREE.AmbientLight","add","directionalLight","THREE.DirectionalLight","castShadow","shadow","mapSize","width","height","floorGeometry","THREE.PlaneGeometry","floorMaterial","THREE.MeshLambertMaterial","color","floor","THREE.Mesh","rotation","x","PI","y","receiveShadow","i","geometry","THREE.SphereGeometry","random","material","THREE.Color","setHSL","coral","playerGeometry","THREE.CapsuleGeometry","playerMaterial","player","stars","starGeometry","starMaterial","emissive","emissiveIntensity","star","userData","rotationSpeed","push","addEventListener","onWindowResize","event","onKeyDown","setupTouchControls","setupVirtualJoystick","setupMobileButtons","touchState","startX","startY","currentX","currentY","isActive","preventDefault","touches","length","touch","clientX","clientY","deltaX","deltaY","moveSpeed","sensitivity","abs","z","updateCamera","joystick","knob","joystickState","centerX","centerY","stopPropagation","rect","getBoundingClientRect","left","top","updateJoystickKnob","distance","sqrt","maxDistance","normalizedX","normalizedY","style","transform","angle","atan2","cos","sin","swimUpBtn","swimDownBtn","mobileButtonState","swimUp","swimDown","aspect","updateProjectionMatrix","code","offset","THREE.Vector3","targetPosition","clone","lerp","animate","requestAnimationFrame","update","render","forEach","checkStarCollection","index","distanceTo","remove","splice","updateUI","levelComplete","textContent","loadingElement","classList","uiElement","test","navigator","userAgent","async","game","warn"],"mappings":"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"}