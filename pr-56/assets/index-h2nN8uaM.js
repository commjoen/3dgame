import{V as c,C as f,B as P,a as x,S as z,A as B,P as L,T,b as k,M as w,c as v,d as V,e as I,f as C,g as G,D as A,h as b,i as D,E as O,W as R,j as F,k as U,l as q,m as Y,n as X,o as W,p as $,q as E,r as K}from"./three-DjvNxg3z.js";function it(){import.meta.url,import("_").catch(()=>1),(async function*(){})().next()}(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function e(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerPolicy&&(o.referrerPolicy=s.referrerPolicy),s.crossOrigin==="use-credentials"?o.credentials="include":s.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(s){if(s.ep)return;s.ep=!0;const o=e(s);fetch(s.href,o)}})();class H{constructor(){this.colliders=[],this.staticColliders=[]}addCollider(t,e=!1){(e?this.staticColliders:this.colliders).push(t)}removeCollider(t){let e=this.colliders.indexOf(t);if(e!==-1){this.colliders.splice(e,1);return}e=this.staticColliders.indexOf(t),e!==-1&&this.staticColliders.splice(e,1)}checkCollision(t,e){return t.collisionType==="sphere"&&e.collisionType==="sphere"?this.checkSphereCollision(t,e):t.collisionType==="box"&&e.collisionType==="box"?this.checkAABBCollision(t,e):t.collisionType==="sphere"&&e.collisionType==="box"||t.collisionType==="box"&&e.collisionType==="sphere"?this.checkSphereAABBCollision(t,e):!1}checkSphereCollision(t,e){const i=t.position.distanceTo(e.position),s=t.radius+e.radius;return i<=s}checkAABBCollision(t,e){const i=t.position.clone().sub(t.size.clone().multiplyScalar(.5)),s=t.position.clone().add(t.size.clone().multiplyScalar(.5)),o=e.position.clone().sub(e.size.clone().multiplyScalar(.5)),n=e.position.clone().add(e.size.clone().multiplyScalar(.5));return i.x<=n.x&&s.x>=o.x&&i.y<=n.y&&s.y>=o.y&&i.z<=n.z&&s.z>=o.z}checkSphereAABBCollision(t,e){const i=t.collisionType==="sphere"?t:e,s=t.collisionType==="box"?t:e,o=s.position.clone().sub(s.size.clone().multiplyScalar(.5)),n=s.position.clone().add(s.size.clone().multiplyScalar(.5)),r=new c(Math.max(o.x,Math.min(i.position.x,n.x)),Math.max(o.y,Math.min(i.position.y,n.y)),Math.max(o.z,Math.min(i.position.z,n.z)));return i.position.distanceTo(r)<=i.radius}checkCollisions(t){const e=[];for(const i of this.colliders)i!==t&&this.checkCollision(t,i)&&e.push(i);for(const i of this.staticColliders)this.checkCollision(t,i)&&e.push(i);return e}}class N{constructor(){this.buoyancyForce=2,this.dragCoefficient=.95,this.currentDirection=new c(.1,0,.05),this.currentStrength=.02}applyBuoyancy(t,e){const i=new c(0,this.buoyancyForce*e,0);t.velocity.add(i)}applyDrag(t){t.velocity.multiplyScalar(this.dragCoefficient)}applyCurrent(t,e=1,i){const s=this.currentDirection.clone().multiplyScalar(this.currentStrength*e*i);t.velocity.add(s)}applyUnderwaterEffects(t,e){this.applyBuoyancy(t,e),this.applyDrag(t),this.applyCurrent(t,1,e)}}class _{constructor(){this.gravity=new c(0,-9.8,0),this.waterDensity=1e3,this.collisionSystem=new H,this.underwaterPhysics=new N,this.rigidBodies=[],this.isUnderwater=!0}addRigidBody(t){this.rigidBodies.push(t),t.collisionType&&this.collisionSystem.addCollider(t,t.isStatic)}removeRigidBody(t){const e=this.rigidBodies.indexOf(t);e!==-1&&(this.rigidBodies.splice(e,1),this.collisionSystem.removeCollider(t))}update(t){for(const e of this.rigidBodies)this.updateBody(e,t)}updateBody(t,e){if(t.isStatic)return;t.velocity||(t.velocity=new c);const i=t.position.clone();if(this.isUnderwater)this.underwaterPhysics.applyUnderwaterEffects(t,e);else{const n=this.gravity.clone().multiplyScalar(e);t.velocity.add(n)}const s=t.velocity.clone().multiplyScalar(e);t.position.add(s);const o=this.collisionSystem.checkCollisions(t);o.length>0&&this.resolveCollisions(t,o,i)}resolveCollisions(t,e,i){e.filter(o=>o.type!=="collectible"||o.collected).length>0&&(t.position.copy(i),t.velocity.multiplyScalar(.3)),t.onCollision&&t.onCollision(e)}checkCollisions(){const t=[];for(let e=0;e<this.rigidBodies.length;e++){const i=this.rigidBodies[e],s=this.collisionSystem.checkCollisions(i);for(const o of s)t.push([i,o])}return t}createSphereBody(t,e,i=!1){return{position:t.clone(),velocity:new c,collisionType:"sphere",radius:e,isStatic:i}}createBoxBody(t,e,i=!1){return{position:t.clone(),velocity:new c,collisionType:"box",size:e.clone(),isStatic:i}}}class J{constructor(t,e,i,s,o){this.position=t.clone(),this.velocity=e.clone(),this.life=i,this.maxLife=i,this.size=s,this.color=o.clone(),this.alpha=1,this.active=!0}update(t){this.active&&(this.position.add(this.velocity.clone().multiplyScalar(t)),this.life-=t,this.alpha=this.life/this.maxLife,this.life<=0&&(this.active=!1))}reset(t,e,i,s,o){this.position.copy(t),this.velocity.copy(e),this.life=i,this.maxLife=i,this.size=s,this.color.copy(o),this.alpha=1,this.active=!0}}class Z{constructor(t,e=1e3){this.scene=t,this.maxParticles=e,this.particles=[],this.emitters=[],this.initializeParticlePool(),this.createParticleRenderSystem(),this.createUnderwaterEmitters()}initializeParticlePool(){for(let t=0;t<this.maxParticles;t++){const e=new J(new c,new c,1,1,new f(16777215));e.active=!1,this.particles.push(e)}}createParticleRenderSystem(){this.geometry=new P,this.positions=new Float32Array(this.maxParticles*3),this.colors=new Float32Array(this.maxParticles*3),this.sizes=new Float32Array(this.maxParticles),this.alphas=new Float32Array(this.maxParticles),this.geometry.setAttribute("position",new x(this.positions,3)),this.geometry.setAttribute("color",new x(this.colors,3)),this.geometry.setAttribute("size",new x(this.sizes,1)),this.geometry.setAttribute("alpha",new x(this.alphas,1)),this.material=new z({uniforms:{time:{value:0},pointTexture:{value:this.createParticleTexture()}},vertexShader:"\n        attribute float size;\n        attribute float alpha;\n        attribute vec3 color;\n        \n        varying float vAlpha;\n        varying vec3 vColor;\n        \n        void main() {\n          vAlpha = alpha;\n          vColor = color;\n          \n          vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n          gl_PointSize = size * (300.0 / -mvPosition.z);\n          gl_Position = projectionMatrix * mvPosition;\n        }\n      ",fragmentShader:"\n        uniform sampler2D pointTexture;\n        \n        varying float vAlpha;\n        varying vec3 vColor;\n        \n        void main() {\n          vec4 texColor = texture2D(pointTexture, gl_PointCoord);\n          gl_FragColor = vec4(vColor, vAlpha * texColor.a);\n        }\n      ",transparent:!0,blending:B,depthWrite:!1}),this.points=new L(this.geometry,this.material),this.scene.add(this.points)}createParticleTexture(){const t=document.createElement("canvas");t.width=64,t.height=64;const e=t.getContext("2d"),i=e.createRadialGradient(32,32,0,32,32,32);i.addColorStop(0,"rgba(255,255,255,1)"),i.addColorStop(.2,"rgba(255,255,255,0.8)"),i.addColorStop(.4,"rgba(255,255,255,0.4)"),i.addColorStop(1,"rgba(255,255,255,0)"),e.fillStyle=i,e.fillRect(0,0,64,64);const s=new T(t);return s.needsUpdate=!0,s}createUnderwaterEmitters(){this.addEmitter({type:"bubbles",position:new c(0,-10,0),rate:5,life:8,size:{min:2,max:6},velocity:new c(0,2,0),velocityVariation:new c(.5,.5,.5),color:new f(8900331),colorVariation:.1,area:new c(20,2,20)}),this.addEmitter({type:"debris",position:new c(0,0,0),rate:3,life:15,size:{min:1,max:3},velocity:new c(.1,.05,.1),velocityVariation:new c(.3,.2,.3),color:new f(16777215),colorVariation:.2,area:new c(40,20,40)}),this.addEmitter({type:"lightRays",position:new c(0,15,0),rate:.5,life:20,size:{min:8,max:15},velocity:new c(0,-.5,0),velocityVariation:new c(.1,.2,.1),color:new f(16766720),colorVariation:.1,area:new c(30,5,30)})}addEmitter(t){const e={...t,accumulator:0,active:!0};this.emitters.push(e)}emitParticle(t){const e=this.particles.find(r=>!r.active);if(!e)return;const i=t.position.clone().add(new c((Math.random()-.5)*t.area.x,(Math.random()-.5)*t.area.y,(Math.random()-.5)*t.area.z)),s=t.velocity.clone().add(new c((Math.random()-.5)*t.velocityVariation.x,(Math.random()-.5)*t.velocityVariation.y,(Math.random()-.5)*t.velocityVariation.z)),o=t.size.min+Math.random()*(t.size.max-t.size.min),n=t.color.clone();t.colorVariation>0&&n.offsetHSL((Math.random()-.5)*t.colorVariation,0,(Math.random()-.5)*t.colorVariation*.5),e.reset(i,s,t.life,o,n)}createBurst(t,e={}){const i=e.count||20,s=e.life||2,o=e.velocity||new c(0,1,0),n=e.velocityVariation||new c(2,2,2),r=e.color||new f(16766720),a=e.size||{min:2,max:8};for(let l=0;l<i;l++){const d=this.particles.find(h=>!h.active);if(!d)break;const m=o.clone().add(new c((Math.random()-.5)*n.x,(Math.random()-.5)*n.y,(Math.random()-.5)*n.z)),g=a.min+Math.random()*(a.max-a.min);d.reset(t.clone(),m,s,g,r)}}update(t){for(const i of this.emitters){if(!i.active)continue;i.accumulator+=t;const s=1/i.rate;for(;i.accumulator>=s;)this.emitParticle(i),i.accumulator-=s}let e=0;for(let i=0;i<this.particles.length;i++){const s=this.particles[i];if(s.active){s.update(t);const o=e*3;this.positions[o]=s.position.x,this.positions[o+1]=s.position.y,this.positions[o+2]=s.position.z,this.colors[o]=s.color.r,this.colors[o+1]=s.color.g,this.colors[o+2]=s.color.b,this.sizes[e]=s.size,this.alphas[e]=s.alpha,e++}}this.geometry.attributes.position.needsUpdate=!0,this.geometry.attributes.color.needsUpdate=!0,this.geometry.attributes.size.needsUpdate=!0,this.geometry.attributes.alpha.needsUpdate=!0,this.geometry.setDrawRange(0,e),this.material.uniforms.time.value+=t}setEmitterActive(t,e){const i=this.emitters.find(s=>s.type===t);i&&(i.active=e)}clear(){for(const t of this.particles)t.active=!1}dispose(){this.scene.remove(this.points),this.geometry.dispose(),this.material.dispose(),this.material.uniforms.pointTexture.value&&this.material.uniforms.pointTexture.value.dispose()}}class j{constructor(){this.audioContext=null,this.listener=null,this.sounds=new Map,this.isInitialized=!1,this.isMuted=!1,this.masterVolume=.5,this.underwaterFilterFrequency=800,this.reverbAmount=.3,console.log("🔊 AudioEngine created")}async initialize(){try{this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.listener=this.audioContext.listener,this.masterGain=this.audioContext.createGain(),this.masterGain.gain.setValueAtTime(this.masterVolume,this.audioContext.currentTime),this.masterGain.connect(this.audioContext.destination),this.createUnderwaterEffects(),this.createSoundEffects(),this.isInitialized=!0,console.log("✅ AudioEngine initialized successfully")}catch(t){console.warn("⚠️ AudioEngine initialization failed:",t)}}createUnderwaterEffects(){this.audioContext&&(this.underwaterFilter=this.audioContext.createBiquadFilter(),this.underwaterFilter.type="lowpass",this.underwaterFilter.frequency.setValueAtTime(this.underwaterFilterFrequency,this.audioContext.currentTime),this.underwaterFilter.Q.setValueAtTime(1,this.audioContext.currentTime),this.underwaterFilter.connect(this.masterGain),console.log("🌊 Underwater audio effects created"))}createSoundEffects(){this.audioContext&&(this.soundConfigs={starCollect:{type:"sine",frequency:880,duration:.4,volume:.3,envelope:{attack:.01,decay:.1,sustain:.8,release:.3},harmonics:[{frequency:1320,volume:.5},{frequency:1760,volume:.3}]},gateActivate:{type:"triangle",frequency:220,duration:1.5,volume:.4,envelope:{attack:.2,decay:.3,sustain:.7,release:.5},modulation:{frequency:4,depth:20}},levelComplete:{type:"square",frequency:440,duration:2.5,volume:.5,envelope:{attack:.1,decay:.2,sustain:.8,release:.4},melody:[440,554.37,659.25,880]},swimming:{type:"sine",frequency:200,duration:.2,volume:.15,envelope:{attack:.05,decay:.1,sustain:.5,release:.05}},underwater:{type:"sine",frequency:80,duration:-1,volume:.12,envelope:{attack:2,decay:0,sustain:1,release:2},modulation:{frequency:.3,depth:5}}},console.log("🎵 Enhanced sound effects configured"))}playSound(t,e=null){if(!this.isInitialized||this.isMuted||!this.audioContext)return;const i=this.soundConfigs[t];if(!i){console.warn('Sound "'.concat(t,'" not found'));return}try{const s=this.audioContext.currentTime;if(i.melody){this.playMelody(i,e);return}const o=this.audioContext.createOscillator(),n=this.audioContext.createGain();if(o.type=i.type,o.frequency.setValueAtTime(i.frequency,s),i.modulation){const h=this.audioContext.createOscillator(),p=this.audioContext.createGain();h.frequency.setValueAtTime(i.modulation.frequency,s),p.gain.setValueAtTime(i.modulation.depth,s),h.connect(p),p.connect(o.frequency),h.start(s),i.duration>0&&h.stop(s+i.duration)}const r=i.envelope||{attack:.01,decay:.1,sustain:.8,release:.2},a=s+r.attack,l=a+r.decay,d=i.volume*r.sustain,m=i.duration>0?s+i.duration:s+1;n.gain.setValueAtTime(0,s),n.gain.linearRampToValueAtTime(i.volume,a),n.gain.linearRampToValueAtTime(d,l),n.gain.setValueAtTime(d,m-r.release),n.gain.linearRampToValueAtTime(0,m),o.connect(n);const g=[];if(i.harmonics&&i.harmonics.forEach(h=>{const p=this.audioContext.createOscillator(),y=this.audioContext.createGain();p.type=i.type,p.frequency.setValueAtTime(h.frequency,s),y.gain.setValueAtTime(h.volume*i.volume,s),y.gain.linearRampToValueAtTime(0,m),p.connect(y),y.connect(n),p.start(s),i.duration>0&&p.stop(m),g.push(p)}),e){const h=this.audioContext.createPanner();h.panningModel="HRTF",h.setPosition(e.x,e.y,e.z),n.connect(h),h.connect(this.underwaterFilter)}else n.connect(this.underwaterFilter);o.start(s),i.duration>0&&o.stop(m),console.log("🔊 Playing enhanced sound: ".concat(t))}catch(s){console.warn('Failed to play sound "'.concat(t,'":'),s)}}playMelody(t,e=null){const i=t.duration/t.melody.length;t.melody.forEach((s,o)=>{const n=this.audioContext.currentTime+o*i,r=this.audioContext.createOscillator(),a=this.audioContext.createGain();if(r.type=t.type,r.frequency.setValueAtTime(s,n),a.gain.setValueAtTime(0,n),a.gain.linearRampToValueAtTime(t.volume,n+.05),a.gain.linearRampToValueAtTime(0,n+i-.05),r.connect(a),e){const l=this.audioContext.createPanner();l.panningModel="HRTF",l.setPosition(e.x,e.y,e.z),a.connect(l),l.connect(this.underwaterFilter)}else a.connect(this.underwaterFilter);r.start(n),r.stop(n+i)})}startAmbientSound(){if(!(!this.isInitialized||this.isMuted)&&!this.ambientOscillator)try{this.ambientOscillator=this.audioContext.createOscillator(),this.ambientGain=this.audioContext.createGain(),this.ambientOscillator.type="sine",this.ambientOscillator.frequency.setValueAtTime(60,this.audioContext.currentTime),this.ambientGain.gain.setValueAtTime(0,this.audioContext.currentTime),this.ambientGain.gain.linearRampToValueAtTime(.08,this.audioContext.currentTime+3),this.ambientOscillator.connect(this.ambientGain),this.ambientGain.connect(this.underwaterFilter),this.ambientOscillator.start(),this.createBackgroundMusic(),console.log("🌊 Ambient underwater sound and music started")}catch(t){console.warn("Failed to start ambient sound:",t)}}createBackgroundMusic(){this.musicLayers=[],[{frequency:110,volume:.03,type:"sine"},{frequency:146.83,volume:.025,type:"sine"},{frequency:164.81,volume:.02,type:"triangle"},{frequency:220,volume:.015,type:"sine"}].forEach((e,i)=>{const s=this.audioContext.createOscillator(),o=this.audioContext.createGain(),n=this.audioContext.createOscillator(),r=this.audioContext.createGain();s.type=e.type,s.frequency.setValueAtTime(e.frequency,this.audioContext.currentTime),n.type="sine",n.frequency.setValueAtTime(.1+i*.05,this.audioContext.currentTime),r.gain.setValueAtTime(2,this.audioContext.currentTime),n.connect(r),r.connect(s.frequency),o.gain.setValueAtTime(0,this.audioContext.currentTime),o.gain.linearRampToValueAtTime(e.volume,this.audioContext.currentTime+5+i),s.connect(o),o.connect(this.underwaterFilter),s.start(),n.start(),this.musicLayers.push({oscillator:s,gainNode:o,lfo:n,lfoGain:r})})}stopAmbientSound(){if(this.ambientOscillator)try{this.ambientGain.gain.linearRampToValueAtTime(0,this.audioContext.currentTime+1),this.ambientOscillator.stop(this.audioContext.currentTime+1),this.ambientOscillator=null,this.ambientGain=null}catch(t){console.warn("Error stopping ambient sound:",t)}this.musicLayers&&(this.musicLayers.forEach(t=>{try{t.gainNode.gain.linearRampToValueAtTime(0,this.audioContext.currentTime+1),t.oscillator.stop(this.audioContext.currentTime+1),t.lfo.stop(this.audioContext.currentTime+1)}catch(e){console.warn("Error stopping music layer:",e)}}),this.musicLayers=null),console.log("🔇 Ambient sound and music stopped")}updateListenerPosition(t,e,i){if(!(!this.listener||!this.isInitialized))try{this.listener.positionX?(this.listener.positionX.setValueAtTime(t.x,this.audioContext.currentTime),this.listener.positionY.setValueAtTime(t.y,this.audioContext.currentTime),this.listener.positionZ.setValueAtTime(t.z,this.audioContext.currentTime),this.listener.forwardX.setValueAtTime(e.x,this.audioContext.currentTime),this.listener.forwardY.setValueAtTime(e.y,this.audioContext.currentTime),this.listener.forwardZ.setValueAtTime(e.z,this.audioContext.currentTime),this.listener.upX.setValueAtTime(i.x,this.audioContext.currentTime),this.listener.upY.setValueAtTime(i.y,this.audioContext.currentTime),this.listener.upZ.setValueAtTime(i.z,this.audioContext.currentTime)):(this.listener.setPosition(t.x,t.y,t.z),this.listener.setOrientation(e.x,e.y,e.z,i.x,i.y,i.z))}catch(s){}}setMasterVolume(t){this.masterVolume=Math.max(0,Math.min(1,t)),this.masterGain&&this.audioContext&&this.masterGain.gain.setValueAtTime(this.masterVolume,this.audioContext.currentTime)}toggleMute(){return this.isMuted=!this.isMuted,this.isMuted?this.stopAmbientSound():this.isInitialized&&this.startAmbientSound(),console.log("🔊 Audio ".concat(this.isMuted?"muted":"unmuted")),this.isMuted}getState(){return{isInitialized:this.isInitialized,isMuted:this.isMuted,masterVolume:this.masterVolume}}dispose(){this.stopAmbientSound(),this.audioContext&&this.audioContext.state!=="closed"&&this.audioContext.close(),this.sounds.clear(),this.isInitialized=!1,console.log("🗑️ AudioEngine disposed")}}class Q{constructor(t,e){this.scene=t,this.physicsEngine=e,this.moveSpeed=8,this.rotationSpeed=3,this.maxVelocity=5,this.movementVector=new c,this.isMoving=!1,this.createPlayerMesh(),this.createPhysicsBody(),this.physicsBody.onCollision=i=>this.handleCollisions(i)}createPlayerMesh(){const t=new k(.5,1.5,4,8),e=new w({color:65416,transparent:!0,opacity:.9,shininess:50,specular:4500070,emissive:8721,emissiveIntensity:.1});this.mesh=new v(t,e),this.mesh.castShadow=!0,this.mesh.receiveShadow=!0,this.mesh.position.set(0,2,0),this.scene.add(this.mesh)}createPhysicsBody(){this.physicsBody=this.physicsEngine.createSphereBody(this.mesh.position.clone(),.7,!1),this.physicsEngine.addRigidBody(this.physicsBody)}handleInput(t){this.movementVector.set(0,0,0),this.isMoving=!1,t.keys&&(t.keys.forward&&(this.movementVector.z-=1,this.isMoving=!0),t.keys.backward&&(this.movementVector.z+=1,this.isMoving=!0),t.keys.left&&(this.movementVector.x-=1,this.isMoving=!0),t.keys.right&&(this.movementVector.x+=1,this.isMoving=!0),t.keys.up&&(this.movementVector.y+=1,this.isMoving=!0),t.keys.down&&(this.movementVector.y-=1,this.isMoving=!0)),t.joystick&&(this.movementVector.x+=t.joystick.x,this.movementVector.z+=t.joystick.y,(Math.abs(t.joystick.x)>.1||Math.abs(t.joystick.y)>.1)&&(this.isMoving=!0)),t.mobileButtons&&(t.mobileButtons.swimUp&&(this.movementVector.y+=1,this.isMoving=!0),t.mobileButtons.swimDown&&(this.movementVector.y-=1,this.isMoving=!0)),this.movementVector.length()>1&&this.movementVector.normalize(),this.applyMovement()}applyMovement(){if(!this.isMoving){this.physicsBody.velocity.multiplyScalar(.9);return}const t=this.movementVector.clone().multiplyScalar(this.moveSpeed*.016);if(this.physicsBody.velocity.add(t),this.physicsBody.velocity.length()>this.maxVelocity&&this.physicsBody.velocity.normalize().multiplyScalar(this.maxVelocity),this.movementVector.length()>.1){const e=Math.atan2(this.movementVector.x,this.movementVector.z);this.mesh.rotation.y=V.lerp(this.mesh.rotation.y,e,this.rotationSpeed*.016)}}update(){this.mesh.position.copy(this.physicsBody.position);const t=Date.now()*.001,e=Math.sin(t*2)*.02;this.mesh.position.y+=e}handleCollisions(t){for(const e of t)e.type==="collectible"?this.handleCollectibleCollision(e):e.type==="obstacle"?this.handleObstacleCollision(e):e.type==="environment"&&this.handleEnvironmentCollision(e)}handleCollectibleCollision(t){console.log("Player collected item:",t)}handleObstacleCollision(t){const e=this.physicsBody.position.clone().sub(t.position).normalize();this.physicsBody.velocity.add(e.multiplyScalar(2))}handleEnvironmentCollision(){}getPosition(){return this.physicsBody.position.clone()}setPosition(t){this.mesh.position.copy(t),this.physicsBody.position.copy(t)}getVelocity(){return this.physicsBody.velocity.clone()}getIsMoving(){return this.isMoving||this.physicsBody.velocity.length()>.1}dispose(){this.physicsEngine.removeRigidBody(this.physicsBody),this.scene.remove(this.mesh),this.mesh.geometry.dispose(),this.mesh.material.dispose()}}class tt{constructor(t,e,i=new c(0,0,-15)){this.scene=t,this.physicsEngine=e,this.position=i.clone(),this.width=4,this.height=6,this.depth=.5,this.isActivated=!1,this.isCollected=!1,this.pulseSpeed=.02,this.rotationSpeed=.01,this.time=0,this.createGateMesh(),this.createPhysicsBody(),console.log("🚪 Gate created at position:",i)}createGateMesh(){const t=new I(this.width,.3,8,32),e=new w({color:65535,emissive:26214,emissiveIntensity:.5,transparent:!0,opacity:.9,shininess:100});this.gateMesh=new v(t,e),this.gateMesh.position.copy(this.position),this.gateMesh.castShadow=!0,this.gateMesh.receiveShadow=!0;const i=new C(this.width*1.5,this.height),s=new G({color:35071,transparent:!0,opacity:.3,side:A});this.portalMesh=new v(i,s),this.portalMesh.position.copy(this.position),this.gateLight=new b(65535,1,25),this.gateLight.position.copy(this.position),this.gateLight.position.z+=1,this.rimLights=[];const o=6;for(let n=0;n<o;n++){const r=n/o*Math.PI*2,a=new b(35071,.3,10),l=this.width*1.2;a.position.set(this.position.x+Math.cos(r)*l,this.position.y+Math.sin(r)*l*.7,this.position.z+(Math.random()-.5)*2),a.userData={originalAngle:r,animationOffset:Math.random()*Math.PI*2},this.rimLights.push(a)}this.setVisibility(!1)}createPhysicsBody(){this.physicsBody=[];const t=this.width-.8,e=8;for(let s=0;s<e;s++){const o=s/e*Math.PI*2,n=Math.cos(o)*t,r=Math.sin(o)*t*.7,a=this.position.clone();a.x+=n,a.y+=r;const l=this.physicsEngine.createSphereBody(a,1,!0);l.type="gate",l.gate=this,this.physicsEngine.addRigidBody(l),this.physicsBody.push(l)}const i=this.physicsEngine.createSphereBody(this.position.clone(),1.5,!0);i.type="gate",i.gate=this,this.physicsEngine.addRigidBody(i),this.physicsBody.push(i)}activate(){this.isActivated||(this.isActivated=!0,this.setVisibility(!0),this.gateMesh.material.emissiveIntensity=.8,this.gateLight.intensity=1.5,this.rimLights.forEach(t=>{t.intensity=.4}),console.log("✨ Gate activated!"))}deactivate(){this.isActivated=!1,this.setVisibility(!1),this.gateMesh.material.emissiveIntensity=.5,this.gateLight.intensity=1,this.rimLights.forEach(t=>{t.intensity=.1})}setVisibility(t){t?(this.scene.add(this.gateMesh),this.scene.add(this.portalMesh),this.scene.add(this.gateLight),this.rimLights.forEach(e=>this.scene.add(e))):(this.scene.remove(this.gateMesh),this.scene.remove(this.portalMesh),this.scene.remove(this.gateLight),this.rimLights.forEach(e=>this.scene.remove(e)))}onPlayerEnter(){return!this.isActivated||this.isCollected?!1:(this.isCollected=!0,console.log("🎯 Player entered gate - Level Complete!"),this.gateMesh.material.emissiveIntensity=1,this.gateLight.intensity=2,!0)}update(t){if(!this.isActivated)return;this.time+=t;const e=.4+Math.sin(this.time*this.pulseSpeed*10)*.3;this.gateMesh.material.emissiveIntensity=e,this.gateLight.intensity=.8+e,this.gateMesh.rotation.z+=this.rotationSpeed,this.portalMesh.material.opacity=.2+Math.sin(this.time*this.pulseSpeed*15)*.2,this.rimLights.forEach((i,s)=>{const o=i.userData,n=this.time*.5+o.animationOffset,r=.2+Math.sin(n+s*.5)*.2;i.intensity=r;const a=this.width*1.2,l=Math.sin(n*2)*.1;i.position.set(this.position.x+Math.cos(o.originalAngle)*(a+l),this.position.y+Math.sin(o.originalAngle)*(a+l)*.7,this.position.z+Math.sin(n*3)*.5)})}getPosition(){return this.position.clone()}getIsActivated(){return this.isActivated}getIsCollected(){return this.isCollected}reset(){this.isCollected=!1,this.deactivate(),this.time=0}dispose(){Array.isArray(this.physicsBody)?this.physicsBody.forEach(t=>{this.physicsEngine.removeRigidBody(t)}):this.physicsBody&&this.physicsEngine.removeRigidBody(this.physicsBody),this.setVisibility(!1),this.gateMesh&&(this.gateMesh.geometry.dispose(),this.gateMesh.material.dispose()),this.portalMesh&&(this.portalMesh.geometry.dispose(),this.portalMesh.material.dispose()),console.log("🗑️ Gate disposed")}}class S{static create(t=.2,e=.4,i=5,s=.1){const o=new D,r=Math.PI*2/i/2;let a=-Math.PI/2;o.moveTo(Math.cos(a)*e,Math.sin(a)*e);for(let m=0;m<i;m++)a+=r,o.lineTo(Math.cos(a)*t,Math.sin(a)*t),a+=r,o.lineTo(Math.cos(a)*e,Math.sin(a)*e);const l={depth:s,bevelEnabled:!0,bevelSegments:2,steps:2,bevelSize:.02,bevelThickness:.02},d=new O(o,l);return d.center(),d}static createMaterial(t=16766720,e=.4){return new w({color:t,emissive:t,emissiveIntensity:e,shininess:100,specular:16777215,transparent:!0,opacity:.95})}static createVariants(){const t=[];return[{inner:.15,outer:.35,color:16766720},{inner:.18,outer:.38,color:16777088},{inner:.12,outer:.32,color:16753920},{inner:.2,outer:.4,color:16775885},{inner:.16,outer:.36,color:16757575}].forEach(i=>{const s=S.create(i.inner,i.outer),o=S.createMaterial(i.color);t.push({geometry:s,material:o,config:i})}),t}}const M={canvasId:"gameCanvas",loadingId:"loading",uiId:"ui"};class et{constructor(){this.scene=null,this.camera=null,this.renderer=null,this.canvas=null,this.isLoaded=!1,this.isMobile=this.detectMobile(),this.physicsEngine=null,this.particleSystem=null,this.audioEngine=null,this.player=null,this.gate=null,this.environmentObjects=[],this.starCount=0,this.levelNumber=1,this.inputState={keys:{forward:!1,backward:!1,left:!1,right:!1,up:!1,down:!1},joystick:{x:0,y:0},mobileButtons:{swimUp:!1,swimDown:!1}},this.lastTime=0,console.log("🌊 Ocean Adventure - Initializing...")}async initialize(){const t=[{name:"Canvas Setup",fn:()=>this.setupCanvas()},{name:"WebGL Renderer",fn:()=>this.setupRenderer()},{name:"3D Scene",fn:()=>this.setupScene()},{name:"Camera",fn:()=>this.setupCamera()},{name:"Lighting",fn:()=>this.setupLights()},{name:"Physics Engine",fn:()=>this.initializePhysics()},{name:"Particle System",fn:()=>this.initializeParticleSystem()},{name:"Audio Engine",fn:()=>this.initializeAudio()},{name:"Environment",fn:()=>this.createUnderwaterEnvironment()},{name:"Player",fn:()=>this.createPlayer()},{name:"Sample Stars",fn:()=>this.createSampleStars()},{name:"Gate",fn:()=>this.createGate()},{name:"Event Listeners",fn:()=>this.setupEventListeners()},{name:"UI Initialization",fn:()=>{this.hideLoading(),this.showUI()}},{name:"Game Loop",fn:()=>this.startGameLoop()}];try{console.log("🎮 Ocean Adventure - Starting initialization...");for(let e=0;e<t.length;e++){const i=t[e];console.log("[".concat(e+1,"/").concat(t.length,"] Initializing ").concat(i.name,"..."));try{await i.fn(),console.log("✅ ".concat(i.name," initialized successfully"))}catch(s){throw console.error("❌ Failed to initialize ".concat(i.name,":"),s),new Error('Initialization failed at step "'.concat(i.name,'": ').concat(s.message))}}this.isLoaded=!0,console.log("🎉 Ocean Adventure - Ready to play!")}catch(e){console.error("❌ Failed to initialize game:",e),this.showError("Failed to initialize game: "+e.message)}}setupCanvas(){if(console.log("🎮 Setting up canvas..."),this.canvas=document.getElementById(M.canvasId),!this.canvas)throw new Error("Game canvas not found");console.log("✅ Canvas found and configured")}setupRenderer(){console.log("🎨 Setting up WebGL renderer...");try{this.renderer=new R({canvas:this.canvas,antialias:!this.isMobile,alpha:!1,powerPreference:this.isMobile?"low-power":"high-performance",failIfMajorPerformanceCaveat:!1,preserveDrawingBuffer:!1,premultipliedAlpha:!1,stencil:!1}),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),this.renderer.setClearColor(4386,1),this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=this.isMobile?F:U,this.renderer.outputColorSpace=q,this.renderer.toneMapping=Y,this.renderer.toneMappingExposure=1;const t=this.renderer.getContext();if(!t)throw new Error("Failed to get WebGL context");t.getExtension("WEBGL_lose_context"),console.log("✅ WebGL renderer configured successfully")}catch(t){throw console.error("❌ Failed to setup WebGL renderer:",t),new Error("WebGL initialization failed: ".concat(t.message))}}setupScene(){console.log("🌊 Setting up 3D scene..."),this.scene=new X,console.log("✅ 3D scene created successfully")}initializePhysics(){this.physicsEngine=new _,console.log("⚡ Physics engine initialized")}initializeParticleSystem(){this.particleSystem=new Z(this.scene,500),console.log("✨ Particle system initialized")}initializeAudio(){this.audioEngine=new j,console.log("🔊 Audio engine created (will initialize on user interaction)")}async tryInitializeAudio(){if(this.audioEngine&&!this.audioEngine.isInitialized)try{await this.audioEngine.initialize(),this.audioEngine.startAmbientSound(),console.log("🌊 Audio initialized and ambient sound started")}catch(t){console.warn("Audio initialization failed:",t)}}setupCamera(){this.camera=new W(75,window.innerWidth/window.innerHeight,.1,1e3),this.camera.position.set(0,5,10),this.camera.lookAt(0,0,0)}setupLights(){const t=new $(3368601,.3);this.scene.add(t);const e=new E(8900331,2.5);if(e.position.set(0,50,10),this.renderer.shadowMap.enabled){e.castShadow=!0;const s=this.isMobile?512:1024;e.shadow.mapSize.width=s,e.shadow.mapSize.height=s,e.shadow.camera.near=.5,e.shadow.camera.far=500,e.shadow.camera.left=-50,e.shadow.camera.right=50,e.shadow.camera.top=50,e.shadow.camera.bottom=-50,this.isMobile&&(e.shadow.bias=-5e-4)}this.scene.add(e),this.addUnderwaterVolumetricLights();const i=new E(4890367,.8);i.position.set(-20,10,-20),this.scene.add(i)}addUnderwaterVolumetricLights(){const t=[4890367,8900331,6591981,49151],e=this.isMobile?3:5;for(let i=0;i<e;i++){const s=new b(t[i%t.length],this.isMobile?2:3,30,2),o=i/e*Math.PI*2,n=15+Math.random()*10;s.position.set(Math.cos(o)*n,8+Math.random()*5,Math.sin(o)*n),s.userData={originalPosition:s.position.clone(),animationOffset:Math.random()*Math.PI*2,animationSpeed:.5+Math.random()*.5,animationRadius:2+Math.random()*3},this.scene.add(s),this.volumetricLights||(this.volumetricLights=[]),this.volumetricLights.push(s)}}createUnderwaterEnvironment(){const t=new C(200,200),e=new w({color:27028,transparent:!0,opacity:.6,shininess:100,specular:8900331,side:A}),i=new v(t,e);i.rotation.x=-Math.PI/2,i.position.y=5,i.receiveShadow=!0,this.scene.add(i);const s=new C(100,100),o=new w({color:9127187,shininess:30,specular:2236962}),n=new v(s,o);n.rotation.x=-Math.PI/2,n.position.y=-5,n.receiveShadow=!0,this.scene.add(n);const r=this.physicsEngine.createBoxBody(new c(0,-5,0),new c(100,.1,100),!0);r.type="environment",this.physicsEngine.addRigidBody(r);for(let a=0;a<10;a++){const l=.5+Math.random()*1.5,d=new K(l),m=Math.random()*.3,g=new w({color:new f().setHSL(m,.7,.5),shininess:60+Math.random()*40,specular:new f().setHSL(m,.3,.8),transparent:!0,opacity:.9}),h=new v(d,g),p=new c((Math.random()-.5)*80,-4+Math.random()*2,(Math.random()-.5)*80);h.position.copy(p),h.castShadow=!0,h.receiveShadow=!0,this.scene.add(h);const y=this.physicsEngine.createSphereBody(p,l*1.2,!0);y.type="environment",y.mesh=h,this.physicsEngine.addRigidBody(y),this.environmentObjects.push({mesh:h,physicsBody:y})}}createPlayer(){this.player=new Q(this.scene,this.physicsEngine),console.log("🏊 Player created with physics")}createGate(){const t=new c(0,2,-20);this.gate=new tt(this.scene,this.physicsEngine,t),console.log("🚪 Gate created")}createSampleStars(){this.stars=[];const t=S.createVariants();for(let e=0;e<5;e++){const i=t[e%t.length],s=i.geometry.clone(),o=i.material.clone(),n=new v(s,o),r=new c((Math.random()-.5)*20,Math.random()*8-2,(Math.random()-.5)*20);n.position.copy(r),n.castShadow=!0;const a=this.physicsEngine.createSphereBody(r,.5,!0);a.type="collectible",a.mesh=n,a.collected=!1,this.physicsEngine.addRigidBody(a),n.userData={rotationSpeed:.02+Math.random()*.02,floatSpeed:.01+Math.random()*.01,floatOffset:Math.random()*Math.PI*2,originalY:r.y,physicsBody:a,rotationAxis:new c(Math.random()-.5,Math.random()-.5,Math.random()-.5).normalize()},this.stars.push({mesh:n,physicsBody:a}),this.scene.add(n)}}setupEventListeners(){window.addEventListener("resize",()=>this.onWindowResize(),{passive:!0}),window.addEventListener("keydown",t=>this.onKeyDown(t)),window.addEventListener("keyup",t=>this.onKeyUp(t)),this.isMobile&&this.setupTouchControls(),this.setupSettingsModal()}onKeyDown(t){switch(this.tryInitializeAudio(),t.code){case"ArrowUp":case"KeyW":this.inputState.keys.forward=!0;break;case"ArrowDown":case"KeyS":this.inputState.keys.backward=!0;break;case"ArrowLeft":case"KeyA":this.inputState.keys.left=!0;break;case"ArrowRight":case"KeyD":this.inputState.keys.right=!0;break;case"Space":this.inputState.keys.up=!0,t.preventDefault();break;case"ShiftLeft":this.inputState.keys.down=!0;break}}onKeyUp(t){switch(t.code){case"ArrowUp":case"KeyW":this.inputState.keys.forward=!1;break;case"ArrowDown":case"KeyS":this.inputState.keys.backward=!1;break;case"ArrowLeft":case"KeyA":this.inputState.keys.left=!1;break;case"ArrowRight":case"KeyD":this.inputState.keys.right=!1;break;case"Space":this.inputState.keys.up=!1;break;case"ShiftLeft":this.inputState.keys.down=!1;break}}setupTouchControls(){this.setupVirtualJoystick(),this.setupMobileButtons(),this.touchState={startX:0,startY:0,currentX:0,currentY:0,isActive:!1},this.canvas.addEventListener("touchstart",t=>{if(t.preventDefault(),this.tryInitializeAudio(),t.touches.length>0){const e=t.touches[0];this.touchState.startX=e.clientX,this.touchState.startY=e.clientY,this.touchState.currentX=e.clientX,this.touchState.currentY=e.clientY,this.touchState.isActive=!0}}),this.canvas.addEventListener("touchmove",t=>{if(t.preventDefault(),t.touches.length>0&&this.touchState.isActive){const e=t.touches[0];this.touchState.currentX=e.clientX,this.touchState.currentY=e.clientY;const i=this.touchState.currentX-this.touchState.startX,s=this.touchState.currentY-this.touchState.startY,o=.05,n=3;Math.abs(i)>20&&(this.player.position.x+=i/n*o*.01),Math.abs(s)>20&&(this.player.position.z+=s/n*o*.01),this.updateCamera()}}),this.canvas.addEventListener("touchend",t=>{t.preventDefault(),this.touchState.isActive=!1}),this.canvas.addEventListener("touchcancel",t=>{t.preventDefault(),this.touchState.isActive=!1})}setupVirtualJoystick(){const t=document.getElementById("virtualJoystick"),e=document.getElementById("joystickKnob");if(!t||!e)return;const i={isActive:!1,centerX:0,centerY:0,currentX:0,currentY:0};t.addEventListener("touchstart",s=>{if(s.preventDefault(),s.stopPropagation(),s.touches.length>0){const o=s.touches[0],n=t.getBoundingClientRect();i.isActive=!0,i.centerX=n.left+n.width/2,i.centerY=n.top+n.height/2,i.currentX=o.clientX,i.currentY=o.clientY,t.style.borderColor="rgba(255, 255, 255, 0.6)",t.style.background="rgba(0, 17, 34, 0.7)",this.updateJoystickKnob(e,i,n)}}),t.addEventListener("touchmove",s=>{if(s.preventDefault(),s.stopPropagation(),s.touches.length>0&&i.isActive){const o=s.touches[0],n=t.getBoundingClientRect();i.currentX=o.clientX,i.currentY=o.clientY;const r=i.currentX-i.centerX,a=i.currentY-i.centerY,l=Math.sqrt(r*r+a*a),d=n.width/2-20;if(l>5){const m=r/d,g=a/d;this.inputState.joystick.x=Math.max(-1,Math.min(1,m*1.2)),this.inputState.joystick.y=Math.max(-1,Math.min(1,g*1.2))}else this.inputState.joystick.x=0,this.inputState.joystick.y=0;this.updateJoystickKnob(e,i,n)}}),t.addEventListener("touchend",s=>{s.preventDefault(),s.stopPropagation(),i.isActive=!1,this.inputState.joystick.x=0,this.inputState.joystick.y=0,t.style.borderColor="rgba(255, 255, 255, 0.3)",t.style.background="rgba(0, 17, 34, 0.5)",e.style.transform="translate(-50%, -50%)"}),t.addEventListener("touchcancel",s=>{s.preventDefault(),s.stopPropagation(),i.isActive=!1,this.inputState.joystick.x=0,this.inputState.joystick.y=0,t.style.borderColor="rgba(255, 255, 255, 0.3)",t.style.background="rgba(0, 17, 34, 0.5)",e.style.transform="translate(-50%, -50%)"})}updateJoystickKnob(t,e,i){const s=e.currentX-e.centerX,o=e.currentY-e.centerY,n=Math.sqrt(s*s+o*o),r=i.width/2-20;if(n<=r)t.style.transform="translate(calc(-50% + ".concat(s,"px), calc(-50% + ").concat(o,"px))");else{const a=Math.atan2(o,s),l=Math.cos(a)*r,d=Math.sin(a)*r;t.style.transform="translate(calc(-50% + ".concat(l,"px), calc(-50% + ").concat(d,"px))")}}setupMobileButtons(){const t=document.getElementById("swimUpBtn"),e=document.getElementById("swimDownBtn");t&&(t.addEventListener("touchstart",i=>{i.preventDefault(),i.stopPropagation(),this.inputState.mobileButtons.swimUp=!0,t.style.background="rgba(255, 255, 255, 0.4)"}),t.addEventListener("touchend",i=>{i.preventDefault(),i.stopPropagation(),this.inputState.mobileButtons.swimUp=!1,t.style.background="rgba(0, 17, 34, 0.6)"}),t.addEventListener("touchcancel",i=>{i.preventDefault(),i.stopPropagation(),this.inputState.mobileButtons.swimUp=!1,t.style.background="rgba(0, 17, 34, 0.6)"})),e&&(e.addEventListener("touchstart",i=>{i.preventDefault(),i.stopPropagation(),this.inputState.mobileButtons.swimDown=!0,e.style.background="rgba(255, 255, 255, 0.4)"}),e.addEventListener("touchend",i=>{i.preventDefault(),i.stopPropagation(),this.inputState.mobileButtons.swimDown=!1,e.style.background="rgba(0, 17, 34, 0.6)"}),e.addEventListener("touchcancel",i=>{i.preventDefault(),i.stopPropagation(),this.inputState.mobileButtons.swimDown=!1,e.style.background="rgba(0, 17, 34, 0.6)"}))}setupSettingsModal(){const t=document.getElementById("settingsButton"),e=document.getElementById("settingsModal"),i=document.getElementById("closeSettings");if(t&&e&&i){const s=n=>{n&&(n.preventDefault(),n.stopPropagation()),e.classList.remove("hidden"),document.body.style.overflow="hidden"},o=n=>{n&&(n.preventDefault(),n.stopPropagation()),e.classList.add("hidden"),document.body.style.overflow=""};t.addEventListener("click",s),i.addEventListener("click",o),e.addEventListener("click",n=>{n.target===e&&o(n)}),document.addEventListener("keydown",n=>{n.key==="Escape"&&!e.classList.contains("hidden")&&o()})}}onWindowResize(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)}updateCamera(){const t=this.player.getPosition(),e=new c(0,5,10),i=t.clone().add(e);this.camera.position.lerp(i,.1),this.camera.lookAt(t)}startGameLoop(){const t=e=>{requestAnimationFrame(t);const i=this.lastTime>0?(e-this.lastTime)/1e3:.016;this.lastTime=e,this.update(i),this.render()};t(0)}update(t){if(!this.isLoaded)return;t=Math.min(t,.033),this.physicsEngine.update(t);const e=this.player.getPosition().clone();if(this.player.handleInput(this.inputState),this.player.update(),this.audioEngine&&this.audioEngine.isInitialized){const i=this.player.getPosition();e.distanceTo(i)>.01&&Math.random()<.05&&this.audioEngine.playSound("swimming",i)}if(this.particleSystem.update(t),this.gate&&this.gate.update(t),this.audioEngine&&this.audioEngine.isInitialized){const i=this.player.getPosition(),s=this.camera.getWorldDirection(new c),o=this.camera.up;this.audioEngine.updateListenerPosition(i,s,o)}if(this.updateCamera(),this.updateUI(),this.stars.forEach(i=>{const s=i.mesh,o=s.userData;o.rotationAxis?s.rotateOnAxis(o.rotationAxis,o.rotationSpeed):(s.rotation.y+=o.rotationSpeed,s.rotation.x+=o.rotationSpeed*.5);const n=Date.now()*.001,r=o.originalY+Math.sin(n*o.floatSpeed+o.floatOffset)*.3;s.position.y=r;const a=.3+Math.sin(n*2+o.floatOffset)*.1;s.material.emissiveIntensity=a}),this.volumetricLights){const i=Date.now()*.001;this.volumetricLights.forEach(s=>{const o=s.userData,n=i*o.animationSpeed+o.animationOffset,r=Math.sin(n)*o.animationRadius,a=Math.cos(n*1.3)*o.animationRadius,l=Math.sin(n*.7)*1;s.position.x=o.originalPosition.x+r,s.position.y=o.originalPosition.y+l,s.position.z=o.originalPosition.z+a;const d=.8+Math.sin(n*3)*.2;s.intensity=(this.isMobile?.6:.8)*d})}this.checkStarCollection(),this.checkGateCollision()}checkStarCollection(){const t=this.physicsEngine.collisionSystem.checkCollisions(this.player.physicsBody);for(const e of t)if(e.type==="collectible"&&!e.collected){e.collected=!0;const i=this.stars.find(s=>s.physicsBody===e);if(i){this.scene.remove(i.mesh),this.physicsEngine.removeRigidBody(i.physicsBody);const s=this.stars.indexOf(i);s!==-1&&this.stars.splice(s,1),this.starCount++,this.updateUI(),this.audioEngine&&this.audioEngine.playSound("starCollect",i.mesh.position),this.particleSystem.createBurst(i.mesh.position,{count:15,life:1.5,velocity:new c(0,2,0),velocityVariation:new c(3,3,3),color:new f(16766720),size:{min:3,max:8}}),console.log("⭐ Star collected! Total: ".concat(this.starCount)),this.stars.length===0&&this.activateGate()}}}activateGate(){this.gate&&!this.gate.getIsActivated()&&(this.gate.activate(),this.audioEngine&&this.audioEngine.playSound("gateActivate",this.gate.getPosition()),console.log("🚪 Gate activated! Swim through to complete level!"))}checkGateCollision(){if(!this.gate||!this.gate.getIsActivated())return;const t=this.physicsEngine.collisionSystem.checkCollisions(this.player.physicsBody);for(const e of t)if(e.type==="gate"&&e.gate&&e.gate.onPlayerEnter()){this.levelComplete();break}}levelComplete(){console.log("🎉 Level Complete!"),this.audioEngine&&this.audioEngine.playSound("levelComplete"),this.levelNumber++,this.gate&&this.gate.reset(),this.createSampleStars(),this.updateUI()}updateUI(){if(document.getElementById("starCount").textContent=this.starCount,document.getElementById("levelNumber").textContent=this.levelNumber,this.player){const t=this.player.getPosition(),i=Math.max(0,5-t.y);document.getElementById("depthMeter").textContent=i.toFixed(1)}}render(){try{this.renderer&&this.scene&&this.camera&&this.renderer.render(this.scene,this.camera)}catch(t){this.webglErrorCount<5&&(console.warn("WebGL render error:",t),this.webglErrorCount=(this.webglErrorCount||0)+1)}}hideLoading(){const t=document.getElementById(M.loadingId);t&&t.classList.add("hidden")}showUI(){const t=document.getElementById(M.uiId);t&&t.classList.remove("hidden"),this.updateUI()}showError(t){const e=document.getElementById(M.loadingId);e&&(e.innerHTML='\n        <div style="color: #ff4444; text-align: center;">\n          <h3>⚠️ Error Loading Game</h3>\n          <p>'.concat(t,'</p>\n          <p style="margin-top: 20px; font-size: 14px; color: #ccc;">\n            Please check the browser console for more details and try refreshing the page.\n          </p>\n        </div>\n      '),e.classList.remove("hidden"))}detectMobile(){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)}}window.addEventListener("DOMContentLoaded",async()=>{try{console.log("🌊 Ocean Adventure - Starting initialization..."),await new et().initialize()}catch(u){console.error("❌ Critical error during game initialization:",u);const t=document.getElementById("loading");t&&(t.innerHTML='\n          <div style="color: #ff4444; text-align: center;">\n            <h3>⚠️ Critical Error</h3>\n            <p>Failed to initialize Ocean Adventure: '.concat(u.message,'</p>\n            <p style="margin-top: 20px; font-size: 14px; color: #ccc;">\n              Please check the browser console for more details and try refreshing the page.\n            </p>\n          </div>\n        '))}},{passive:!0});window.addEventListener("webglcontextlost",u=>{u.preventDefault(),console.warn("WebGL context lost")},{passive:!1});window.addEventListener("webglcontextrestored",()=>{console.log("WebGL context restored")},{passive:!0});document.addEventListener("visibilitychange",()=>{document.hidden?console.log("Game paused due to page visibility"):console.log("Game resumed")},{passive:!0});export{it as __vite_legacy_guard};
//# sourceMappingURL=index-h2nN8uaM.js.map
