{"version":3,"file":"index-sHf8xng9.js","sources":["../../src/main.js"],"sourcesContent":["/**\n * Ocean Adventure - Main Game Entry Point\n *\n * This is a placeholder implementation showing the basic structure\n * for the 3D underwater platform game. The actual game engine\n * implementation will be developed following the Copilot plan.\n */\n\nimport * as THREE from 'three'\n\n// Game configuration\nconst CONFIG = {\n  targetFPS: 60,\n  mobileFPS: 30,\n  canvasId: 'gameCanvas',\n  loadingId: 'loading',\n  uiId: 'ui',\n}\n\nclass OceanAdventure {\n  constructor() {\n    this.scene = null\n    this.camera = null\n    this.renderer = null\n    this.canvas = null\n    this.isLoaded = false\n    this.isMobile = this.detectMobile()\n\n    // Game state\n    this.starCount = 0\n    this.levelNumber = 1\n\n    console.log('üåä Ocean Adventure - Initializing...')\n  }\n\n  async initialize() {\n    try {\n      this.setupCanvas()\n      this.setupRenderer()\n      this.setupScene()\n      this.setupCamera()\n      this.setupLights()\n      this.setupEventListeners()\n\n      // Hide loading screen and show UI\n      this.hideLoading()\n      this.showUI()\n\n      // Start game loop\n      this.startGameLoop()\n\n      this.isLoaded = true\n      console.log('üéÆ Ocean Adventure - Ready to play!')\n    } catch (error) {\n      console.error('‚ùå Failed to initialize game:', error)\n    }\n  }\n\n  setupCanvas() {\n    this.canvas = document.getElementById(CONFIG.canvasId)\n    if (!this.canvas) {\n      throw new Error('Game canvas not found')\n    }\n  }\n\n  setupRenderer() {\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: this.canvas,\n      antialias: !this.isMobile, // Disable antialiasing on mobile for performance\n      alpha: false,\n    })\n\n    this.renderer.setSize(window.innerWidth, window.innerHeight)\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n    this.renderer.setClearColor(0x001122, 1) // Deep ocean blue\n\n    // Enable shadows for better visual quality\n    this.renderer.shadowMap.enabled = true\n    this.renderer.shadowMap.type = THREE.PCFSoftShadowMap\n  }\n\n  setupScene() {\n    this.scene = new THREE.Scene()\n\n    // Add basic underwater environment\n    this.createUnderwaterEnvironment()\n    this.createPlayer()\n    this.createSampleStars()\n  }\n\n  setupCamera() {\n    this.camera = new THREE.PerspectiveCamera(\n      75, // Field of view\n      window.innerWidth / window.innerHeight, // Aspect ratio\n      0.1, // Near clipping plane\n      1000 // Far clipping plane\n    )\n\n    // Position camera behind and above the player\n    this.camera.position.set(0, 5, 10)\n    this.camera.lookAt(0, 0, 0)\n  }\n\n  setupLights() {\n    // Ambient light for underwater ambience\n    const ambientLight = new THREE.AmbientLight(0x404080, 0.4)\n    this.scene.add(ambientLight)\n\n    // Directional light simulating filtered sunlight\n    const directionalLight = new THREE.DirectionalLight(0x87ceeb, 0.8)\n    directionalLight.position.set(0, 50, 0)\n    directionalLight.castShadow = true\n    directionalLight.shadow.mapSize.width = 2048\n    directionalLight.shadow.mapSize.height = 2048\n    this.scene.add(directionalLight)\n  }\n\n  createUnderwaterEnvironment() {\n    // Create ocean floor\n    const floorGeometry = new THREE.PlaneGeometry(100, 100)\n    const floorMaterial = new THREE.MeshLambertMaterial({ color: 0x8b4513 })\n    const floor = new THREE.Mesh(floorGeometry, floorMaterial)\n    floor.rotation.x = -Math.PI / 2\n    floor.position.y = -5\n    floor.receiveShadow = true\n    this.scene.add(floor)\n\n    // Add some basic coral/rocks\n    for (let i = 0; i < 10; i++) {\n      const geometry = new THREE.SphereGeometry(0.5 + Math.random() * 1.5)\n      const material = new THREE.MeshLambertMaterial({\n        color: new THREE.Color().setHSL(Math.random() * 0.3, 0.7, 0.5),\n      })\n      const coral = new THREE.Mesh(geometry, material)\n      coral.position.set(\n        (Math.random() - 0.5) * 80,\n        -4 + Math.random() * 2,\n        (Math.random() - 0.5) * 80\n      )\n      coral.castShadow = true\n      this.scene.add(coral)\n    }\n  }\n\n  createPlayer() {\n    // Simple player representation (will be replaced with proper model)\n    const playerGeometry = new THREE.CapsuleGeometry(0.5, 1.5)\n    const playerMaterial = new THREE.MeshLambertMaterial({ color: 0x00ff88 })\n    this.player = new THREE.Mesh(playerGeometry, playerMaterial)\n    this.player.position.set(0, 0, 0)\n    this.player.castShadow = true\n    this.scene.add(this.player)\n  }\n\n  createSampleStars() {\n    this.stars = []\n\n    // Create glowing star collectibles\n    for (let i = 0; i < 5; i++) {\n      const starGeometry = new THREE.SphereGeometry(0.3)\n      const starMaterial = new THREE.MeshLambertMaterial({\n        color: 0xffd700,\n        emissive: 0xffd700,\n        emissiveIntensity: 0.3,\n      })\n\n      const star = new THREE.Mesh(starGeometry, starMaterial)\n      star.position.set(\n        (Math.random() - 0.5) * 20,\n        Math.random() * 8 - 2,\n        (Math.random() - 0.5) * 20\n      )\n\n      // Add simple rotation animation\n      star.userData = { rotationSpeed: 0.02 + Math.random() * 0.02 }\n\n      this.stars.push(star)\n      this.scene.add(star)\n    }\n  }\n\n  setupEventListeners() {\n    // Handle window resize\n    window.addEventListener('resize', () => this.onWindowResize())\n\n    // Basic movement controls (placeholder)\n    window.addEventListener('keydown', event => this.onKeyDown(event))\n\n    // Touch controls for mobile (placeholder)\n    if (this.isMobile) {\n      this.setupTouchControls()\n    }\n  }\n\n  setupTouchControls() {\n    // Setup virtual joystick\n    this.setupVirtualJoystick()\n\n    // Setup mobile action buttons\n    this.setupMobileButtons()\n\n    // Touch control state for general canvas interactions\n    this.touchState = {\n      startX: 0,\n      startY: 0,\n      currentX: 0,\n      currentY: 0,\n      isActive: false,\n    }\n\n    // General canvas touch events (for swipe gestures)\n    this.canvas.addEventListener('touchstart', event => {\n      event.preventDefault()\n      if (event.touches.length > 0) {\n        const touch = event.touches[0]\n        this.touchState.startX = touch.clientX\n        this.touchState.startY = touch.clientY\n        this.touchState.currentX = touch.clientX\n        this.touchState.currentY = touch.clientY\n        this.touchState.isActive = true\n      }\n    })\n\n    this.canvas.addEventListener('touchmove', event => {\n      event.preventDefault()\n      if (event.touches.length > 0 && this.touchState.isActive) {\n        const touch = event.touches[0]\n        this.touchState.currentX = touch.clientX\n        this.touchState.currentY = touch.clientY\n\n        // Calculate movement delta for swipe gestures\n        const deltaX = this.touchState.currentX - this.touchState.startX\n        const deltaY = this.touchState.currentY - this.touchState.startY\n\n        // Apply gentle swipe-based movement (subtle effect)\n        const moveSpeed = 0.05\n        const sensitivity = 3\n\n        if (Math.abs(deltaX) > 20) {\n          this.player.position.x += (deltaX / sensitivity) * moveSpeed * 0.01\n        }\n\n        if (Math.abs(deltaY) > 20) {\n          this.player.position.z += (deltaY / sensitivity) * moveSpeed * 0.01\n        }\n\n        this.updateCamera()\n      }\n    })\n\n    this.canvas.addEventListener('touchend', event => {\n      event.preventDefault()\n      this.touchState.isActive = false\n    })\n\n    this.canvas.addEventListener('touchcancel', event => {\n      event.preventDefault()\n      this.touchState.isActive = false\n    })\n  }\n\n  setupVirtualJoystick() {\n    const joystick = document.getElementById('virtualJoystick')\n    const knob = document.getElementById('joystickKnob')\n\n    if (!joystick || !knob) {\n      return\n    }\n\n    const joystickState = {\n      isActive: false,\n      centerX: 0,\n      centerY: 0,\n      currentX: 0,\n      currentY: 0,\n    }\n\n    const moveSpeed = 0.15\n\n    joystick.addEventListener('touchstart', event => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      if (event.touches.length > 0) {\n        const touch = event.touches[0]\n        const rect = joystick.getBoundingClientRect()\n\n        joystickState.isActive = true\n        joystickState.centerX = rect.left + rect.width / 2\n        joystickState.centerY = rect.top + rect.height / 2\n        joystickState.currentX = touch.clientX\n        joystickState.currentY = touch.clientY\n\n        this.updateJoystickKnob(knob, joystickState, rect)\n      }\n    })\n\n    joystick.addEventListener('touchmove', event => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      if (event.touches.length > 0 && joystickState.isActive) {\n        const touch = event.touches[0]\n        const rect = joystick.getBoundingClientRect()\n\n        joystickState.currentX = touch.clientX\n        joystickState.currentY = touch.clientY\n\n        // Calculate movement vector\n        const deltaX = joystickState.currentX - joystickState.centerX\n        const deltaY = joystickState.currentY - joystickState.centerY\n        const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY)\n        const maxDistance = rect.width / 2 - 20\n\n        // Normalize and apply movement\n        if (distance > 5) {\n          const normalizedX = deltaX / maxDistance\n          const normalizedY = deltaY / maxDistance\n\n          // Apply movement to player\n          this.player.position.x += normalizedX * moveSpeed * 0.03\n          this.player.position.z += normalizedY * moveSpeed * 0.03\n\n          this.updateCamera()\n        }\n\n        this.updateJoystickKnob(knob, joystickState, rect)\n      }\n    })\n\n    joystick.addEventListener('touchend', event => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      joystickState.isActive = false\n      knob.style.transform = 'translate(-50%, -50%)'\n    })\n\n    joystick.addEventListener('touchcancel', event => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      joystickState.isActive = false\n      knob.style.transform = 'translate(-50%, -50%)'\n    })\n  }\n\n  updateJoystickKnob(knob, joystickState, rect) {\n    const deltaX = joystickState.currentX - joystickState.centerX\n    const deltaY = joystickState.currentY - joystickState.centerY\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY)\n    const maxDistance = rect.width / 2 - 20\n\n    if (distance <= maxDistance) {\n      knob.style.transform = `translate(calc(-50% + ${deltaX}px), calc(-50% + ${deltaY}px))`\n    } else {\n      const angle = Math.atan2(deltaY, deltaX)\n      const x = Math.cos(angle) * maxDistance\n      const y = Math.sin(angle) * maxDistance\n      knob.style.transform = `translate(calc(-50% + ${x}px), calc(-50% + ${y}px))`\n    }\n  }\n\n  setupMobileButtons() {\n    const swimUpBtn = document.getElementById('swimUpBtn')\n    const swimDownBtn = document.getElementById('swimDownBtn')\n\n    if (swimUpBtn) {\n      swimUpBtn.addEventListener('touchstart', event => {\n        event.preventDefault()\n        event.stopPropagation()\n        this.mobileButtonState = { swimUp: true }\n      })\n\n      swimUpBtn.addEventListener('touchend', event => {\n        event.preventDefault()\n        event.stopPropagation()\n        this.mobileButtonState = { swimUp: false }\n      })\n    }\n\n    if (swimDownBtn) {\n      swimDownBtn.addEventListener('touchstart', event => {\n        event.preventDefault()\n        event.stopPropagation()\n        this.mobileButtonState = { swimDown: true }\n      })\n\n      swimDownBtn.addEventListener('touchend', event => {\n        event.preventDefault()\n        event.stopPropagation()\n        this.mobileButtonState = { swimDown: false }\n      })\n    }\n\n    // Initialize mobile button state\n    this.mobileButtonState = { swimUp: false, swimDown: false }\n  }\n\n  onWindowResize() {\n    this.camera.aspect = window.innerWidth / window.innerHeight\n    this.camera.updateProjectionMatrix()\n    this.renderer.setSize(window.innerWidth, window.innerHeight)\n  }\n\n  onKeyDown(event) {\n    // Basic movement controls (placeholder)\n    const moveSpeed = 0.2\n\n    switch (event.code) {\n      case 'ArrowUp':\n      case 'KeyW':\n        this.player.position.z -= moveSpeed\n        break\n      case 'ArrowDown':\n      case 'KeyS':\n        this.player.position.z += moveSpeed\n        break\n      case 'ArrowLeft':\n      case 'KeyA':\n        this.player.position.x -= moveSpeed\n        break\n      case 'ArrowRight':\n      case 'KeyD':\n        this.player.position.x += moveSpeed\n        break\n      case 'Space':\n        this.player.position.y += moveSpeed * 0.5\n        break\n      case 'ShiftLeft':\n        this.player.position.y -= moveSpeed * 0.5\n        break\n    }\n\n    // Update camera to follow player\n    this.updateCamera()\n  }\n\n  updateCamera() {\n    // Simple camera follow logic (will be improved)\n    const offset = new THREE.Vector3(0, 5, 10)\n    const targetPosition = this.player.position.clone().add(offset)\n    this.camera.position.lerp(targetPosition, 0.1)\n    this.camera.lookAt(this.player.position)\n  }\n\n  startGameLoop() {\n    const animate = () => {\n      requestAnimationFrame(animate)\n      this.update()\n      this.render()\n    }\n    animate()\n  }\n\n  update() {\n    if (!this.isLoaded) {\n      return\n    }\n\n    // Handle mobile button states\n    if (this.isMobile && this.mobileButtonState) {\n      const moveSpeed = 0.2\n      if (this.mobileButtonState.swimUp) {\n        this.player.position.y += moveSpeed * 0.5\n        this.updateCamera()\n      }\n      if (this.mobileButtonState.swimDown) {\n        this.player.position.y -= moveSpeed * 0.5\n        this.updateCamera()\n      }\n    }\n\n    // Animate stars\n    this.stars.forEach(star => {\n      star.rotation.y += star.userData.rotationSpeed\n      star.rotation.x += star.userData.rotationSpeed * 0.5\n    })\n\n    // Check star collection (simple distance check)\n    this.checkStarCollection()\n  }\n\n  checkStarCollection() {\n    this.stars.forEach((star, index) => {\n      const distance = this.player.position.distanceTo(star.position)\n      if (distance < 1.0) {\n        // Collect star\n        this.scene.remove(star)\n        this.stars.splice(index, 1)\n        this.starCount++\n        this.updateUI()\n\n        console.log(`‚≠ê Star collected! Total: ${this.starCount}`)\n\n        // Check if level is complete\n        if (this.stars.length === 0) {\n          this.levelComplete()\n        }\n      }\n    })\n  }\n\n  levelComplete() {\n    console.log('üéâ Level Complete!')\n    this.levelNumber++\n    // Reset level with new stars\n    this.createSampleStars()\n    this.updateUI()\n  }\n\n  updateUI() {\n    document.getElementById('starCount').textContent = this.starCount\n    document.getElementById('levelNumber').textContent = this.levelNumber\n  }\n\n  render() {\n    if (this.renderer && this.scene && this.camera) {\n      this.renderer.render(this.scene, this.camera)\n    }\n  }\n\n  hideLoading() {\n    const loadingElement = document.getElementById(CONFIG.loadingId)\n    if (loadingElement) {\n      loadingElement.classList.add('hidden')\n    }\n  }\n\n  showUI() {\n    const uiElement = document.getElementById(CONFIG.uiId)\n    if (uiElement) {\n      uiElement.classList.remove('hidden')\n    }\n    this.updateUI()\n  }\n\n  detectMobile() {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n      navigator.userAgent\n    )\n  }\n}\n\n// Initialize the game when the page loads\nwindow.addEventListener('DOMContentLoaded', async () => {\n  const game = new OceanAdventure()\n  await game.initialize()\n})\n\n// Handle WebGL context loss\nwindow.addEventListener('webglcontextlost', event => {\n  event.preventDefault()\n  console.warn('WebGL context lost')\n})\n\nwindow.addEventListener('webglcontextrestored', () => {\n  console.log('WebGL context restored')\n  // Reinitialize game here if needed\n})\n"],"names":["CONFIG","OceanAdventure","error","THREE.WebGLRenderer","THREE.PCFSoftShadowMap","THREE.Scene","THREE.PerspectiveCamera","ambientLight","THREE.AmbientLight","directionalLight","THREE.DirectionalLight","floorGeometry","THREE.PlaneGeometry","floorMaterial","THREE.MeshLambertMaterial","floor","THREE.Mesh","i","geometry","THREE.SphereGeometry","material","THREE.Color","coral","playerGeometry","THREE.CapsuleGeometry","playerMaterial","starGeometry","starMaterial","star","event","touch","deltaX","deltaY","moveSpeed","sensitivity","joystick","knob","joystickState","rect","distance","maxDistance","normalizedX","normalizedY","angle","x","y","swimUpBtn","swimDownBtn","offset","THREE.Vector3","targetPosition","animate","index","loadingElement","uiElement"],"mappings":"64BAWA,MAAMA,EAAS,CAGb,SAAU,aACV,UAAW,UACX,KAAM,IACR,EAEA,MAAMC,CAAe,CACnB,aAAc,CACZ,KAAK,MAAQ,KACb,KAAK,OAAS,KACd,KAAK,SAAW,KAChB,KAAK,OAAS,KACd,KAAK,SAAW,GAChB,KAAK,SAAW,KAAK,aAAY,EAGjC,KAAK,UAAY,EACjB,KAAK,YAAc,EAEnB,QAAQ,IAAI,sCAAsC,CACpD,CAEA,MAAM,YAAa,CACjB,GAAI,CACF,KAAK,YAAW,EAChB,KAAK,cAAa,EAClB,KAAK,WAAU,EACf,KAAK,YAAW,EAChB,KAAK,YAAW,EAChB,KAAK,oBAAmB,EAGxB,KAAK,YAAW,EAChB,KAAK,OAAM,EAGX,KAAK,cAAa,EAElB,KAAK,SAAW,GAChB,QAAQ,IAAI,qCAAqC,CACnD,OAASC,EAAO,CACd,QAAQ,MAAM,+BAAgCA,CAAK,CACrD,CACF,CAEA,aAAc,CAEZ,GADA,KAAK,OAAS,SAAS,eAAeF,EAAO,QAAQ,EACjD,CAAC,KAAK,OACR,MAAM,IAAI,MAAM,uBAAuB,CAE3C,CAEA,eAAgB,CACd,KAAK,SAAW,IAAIG,EAAoB,CACtC,OAAQ,KAAK,OACb,UAAW,CAAC,KAAK,SACjB,MAAO,EACb,CAAK,EAED,KAAK,SAAS,QAAQ,OAAO,WAAY,OAAO,WAAW,EAC3D,KAAK,SAAS,cAAc,KAAK,IAAI,OAAO,iBAAkB,CAAC,CAAC,EAChE,KAAK,SAAS,cAAc,KAAU,CAAC,EAGvC,KAAK,SAAS,UAAU,QAAU,GAClC,KAAK,SAAS,UAAU,KAAOC,CACjC,CAEA,YAAa,CACX,KAAK,MAAQ,IAAIC,EAGjB,KAAK,4BAA2B,EAChC,KAAK,aAAY,EACjB,KAAK,kBAAiB,CACxB,CAEA,aAAc,CACZ,KAAK,OAAS,IAAIC,EAChB,GACA,OAAO,WAAa,OAAO,YAC3B,GACA,GACN,EAGI,KAAK,OAAO,SAAS,IAAI,EAAG,EAAG,EAAE,EACjC,KAAK,OAAO,OAAO,EAAG,EAAG,CAAC,CAC5B,CAEA,aAAc,CAEZ,MAAMC,EAAe,IAAIC,EAAmB,QAAU,EAAG,EACzD,KAAK,MAAM,IAAID,CAAY,EAG3B,MAAME,EAAmB,IAAIC,EAAuB,QAAU,EAAG,EACjED,EAAiB,SAAS,IAAI,EAAG,GAAI,CAAC,EACtCA,EAAiB,WAAa,GAC9BA,EAAiB,OAAO,QAAQ,MAAQ,KACxCA,EAAiB,OAAO,QAAQ,OAAS,KACzC,KAAK,MAAM,IAAIA,CAAgB,CACjC,CAEA,6BAA8B,CAE5B,MAAME,EAAgB,IAAIC,EAAoB,IAAK,GAAG,EAChDC,EAAgB,IAAIC,EAA0B,CAAE,MAAO,OAAQ,CAAE,EACjEC,EAAQ,IAAIC,EAAWL,EAAeE,CAAa,EACzDE,EAAM,SAAS,EAAI,CAAC,KAAK,GAAK,EAC9BA,EAAM,SAAS,EAAI,GACnBA,EAAM,cAAgB,GACtB,KAAK,MAAM,IAAIA,CAAK,EAGpB,QAASE,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,MAAMC,EAAW,IAAIC,EAAqB,GAAM,KAAK,OAAM,EAAK,GAAG,EAC7DC,EAAW,IAAIN,EAA0B,CAC7C,MAAO,IAAIO,EAAW,EAAG,OAAO,KAAK,SAAW,GAAK,GAAK,EAAG,CACrE,CAAO,EACKC,EAAQ,IAAIN,EAAWE,EAAUE,CAAQ,EAC/CE,EAAM,SAAS,KACZ,KAAK,SAAW,IAAO,GACxB,GAAK,KAAK,OAAM,EAAK,GACpB,KAAK,OAAM,EAAK,IAAO,EAChC,EACMA,EAAM,WAAa,GACnB,KAAK,MAAM,IAAIA,CAAK,CACtB,CACF,CAEA,cAAe,CAEb,MAAMC,EAAiB,IAAIC,EAAsB,GAAK,GAAG,EACnDC,EAAiB,IAAIX,EAA0B,CAAE,MAAO,KAAQ,CAAE,EACxE,KAAK,OAAS,IAAIE,EAAWO,EAAgBE,CAAc,EAC3D,KAAK,OAAO,SAAS,IAAI,EAAG,EAAG,CAAC,EAChC,KAAK,OAAO,WAAa,GACzB,KAAK,MAAM,IAAI,KAAK,MAAM,CAC5B,CAEA,mBAAoB,CAClB,KAAK,MAAQ,CAAA,EAGb,QAASR,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMS,EAAe,IAAIP,EAAqB,EAAG,EAC3CQ,EAAe,IAAIb,EAA0B,CACjD,MAAO,SACP,SAAU,SACV,kBAAmB,EAC3B,CAAO,EAEKc,EAAO,IAAIZ,EAAWU,EAAcC,CAAY,EACtDC,EAAK,SAAS,KACX,KAAK,SAAW,IAAO,GACxB,KAAK,SAAW,EAAI,GACnB,KAAK,OAAM,EAAK,IAAO,EAChC,EAGMA,EAAK,SAAW,CAAE,cAAe,IAAO,KAAK,OAAM,EAAK,GAAI,EAE5D,KAAK,MAAM,KAAKA,CAAI,EACpB,KAAK,MAAM,IAAIA,CAAI,CACrB,CACF,CAEA,qBAAsB,CAEpB,OAAO,iBAAiB,SAAU,IAAM,KAAK,eAAc,CAAE,EAG7D,OAAO,iBAAiB,UAAWC,GAAS,KAAK,UAAUA,CAAK,CAAC,EAG7D,KAAK,UACP,KAAK,mBAAkB,CAE3B,CAEA,oBAAqB,CAEnB,KAAK,qBAAoB,EAGzB,KAAK,mBAAkB,EAGvB,KAAK,WAAa,CAChB,OAAQ,EACR,OAAQ,EACR,SAAU,EACV,SAAU,EACV,SAAU,EAChB,EAGI,KAAK,OAAO,iBAAiB,aAAcA,GAAS,CAElD,GADAA,EAAM,eAAc,EAChBA,EAAM,QAAQ,OAAS,EAAG,CAC5B,MAAMC,EAAQD,EAAM,QAAQ,CAAC,EAC7B,KAAK,WAAW,OAASC,EAAM,QAC/B,KAAK,WAAW,OAASA,EAAM,QAC/B,KAAK,WAAW,SAAWA,EAAM,QACjC,KAAK,WAAW,SAAWA,EAAM,QACjC,KAAK,WAAW,SAAW,EAC7B,CACF,CAAC,EAED,KAAK,OAAO,iBAAiB,YAAaD,GAAS,CAEjD,GADAA,EAAM,eAAc,EAChBA,EAAM,QAAQ,OAAS,GAAK,KAAK,WAAW,SAAU,CACxD,MAAMC,EAAQD,EAAM,QAAQ,CAAC,EAC7B,KAAK,WAAW,SAAWC,EAAM,QACjC,KAAK,WAAW,SAAWA,EAAM,QAGjC,MAAMC,EAAS,KAAK,WAAW,SAAW,KAAK,WAAW,OACpDC,EAAS,KAAK,WAAW,SAAW,KAAK,WAAW,OAGpDC,EAAY,IACZC,EAAc,EAEhB,KAAK,IAAIH,CAAM,EAAI,KACrB,KAAK,OAAO,SAAS,GAAMA,EAASG,EAAeD,EAAY,KAG7D,KAAK,IAAID,CAAM,EAAI,KACrB,KAAK,OAAO,SAAS,GAAMA,EAASE,EAAeD,EAAY,KAGjE,KAAK,aAAY,CACnB,CACF,CAAC,EAED,KAAK,OAAO,iBAAiB,WAAYJ,GAAS,CAChDA,EAAM,eAAc,EACpB,KAAK,WAAW,SAAW,EAC7B,CAAC,EAED,KAAK,OAAO,iBAAiB,cAAeA,GAAS,CACnDA,EAAM,eAAc,EACpB,KAAK,WAAW,SAAW,EAC7B,CAAC,CACH,CAEA,sBAAuB,CACrB,MAAMM,EAAW,SAAS,eAAe,iBAAiB,EACpDC,EAAO,SAAS,eAAe,cAAc,EAEnD,GAAI,CAACD,GAAY,CAACC,EAChB,OAGF,MAAMC,EAAgB,CACpB,SAAU,GACV,QAAS,EACT,QAAS,EACT,SAAU,EACV,SAAU,CAChB,EAEUJ,EAAY,IAElBE,EAAS,iBAAiB,aAAcN,GAAS,CAI/C,GAHAA,EAAM,eAAc,EACpBA,EAAM,gBAAe,EAEjBA,EAAM,QAAQ,OAAS,EAAG,CAC5B,MAAMC,EAAQD,EAAM,QAAQ,CAAC,EACvBS,EAAOH,EAAS,sBAAqB,EAE3CE,EAAc,SAAW,GACzBA,EAAc,QAAUC,EAAK,KAAOA,EAAK,MAAQ,EACjDD,EAAc,QAAUC,EAAK,IAAMA,EAAK,OAAS,EACjDD,EAAc,SAAWP,EAAM,QAC/BO,EAAc,SAAWP,EAAM,QAE/B,KAAK,mBAAmBM,EAAMC,EAAeC,CAAI,CACnD,CACF,CAAC,EAEDH,EAAS,iBAAiB,YAAaN,GAAS,CAI9C,GAHAA,EAAM,eAAc,EACpBA,EAAM,gBAAe,EAEjBA,EAAM,QAAQ,OAAS,GAAKQ,EAAc,SAAU,CACtD,MAAMP,EAAQD,EAAM,QAAQ,CAAC,EACvBS,EAAOH,EAAS,sBAAqB,EAE3CE,EAAc,SAAWP,EAAM,QAC/BO,EAAc,SAAWP,EAAM,QAG/B,MAAMC,EAASM,EAAc,SAAWA,EAAc,QAChDL,EAASK,EAAc,SAAWA,EAAc,QAChDE,EAAW,KAAK,KAAKR,EAASA,EAASC,EAASA,CAAM,EACtDQ,EAAcF,EAAK,MAAQ,EAAI,GAGrC,GAAIC,EAAW,EAAG,CAChB,MAAME,EAAcV,EAASS,EACvBE,EAAcV,EAASQ,EAG7B,KAAK,OAAO,SAAS,GAAKC,EAAcR,EAAY,IACpD,KAAK,OAAO,SAAS,GAAKS,EAAcT,EAAY,IAEpD,KAAK,aAAY,CACnB,CAEA,KAAK,mBAAmBG,EAAMC,EAAeC,CAAI,CACnD,CACF,CAAC,EAEDH,EAAS,iBAAiB,WAAYN,GAAS,CAC7CA,EAAM,eAAc,EACpBA,EAAM,gBAAe,EAErBQ,EAAc,SAAW,GACzBD,EAAK,MAAM,UAAY,uBACzB,CAAC,EAEDD,EAAS,iBAAiB,cAAeN,GAAS,CAChDA,EAAM,eAAc,EACpBA,EAAM,gBAAe,EAErBQ,EAAc,SAAW,GACzBD,EAAK,MAAM,UAAY,uBACzB,CAAC,CACH,CAEA,mBAAmBA,EAAMC,EAAeC,EAAM,CAC5C,MAAMP,EAASM,EAAc,SAAWA,EAAc,QAChDL,EAASK,EAAc,SAAWA,EAAc,QAChDE,EAAW,KAAK,KAAKR,EAASA,EAASC,EAASA,CAAM,EACtDQ,EAAcF,EAAK,MAAQ,EAAI,GAErC,GAAIC,GAAYC,EACdJ,EAAK,MAAM,UAAY,yBAAyB,OAAAL,EAAM,qBAAoB,OAAAC,EAAM,YAC3E,CACL,MAAMW,EAAQ,KAAK,MAAMX,EAAQD,CAAM,EACjCa,EAAI,KAAK,IAAID,CAAK,EAAIH,EACtBK,EAAI,KAAK,IAAIF,CAAK,EAAIH,EAC5BJ,EAAK,MAAM,UAAY,yBAAyB,OAAAQ,EAAC,qBAAoB,OAAAC,EAAC,OACxE,CACF,CAEA,oBAAqB,CACnB,MAAMC,EAAY,SAAS,eAAe,WAAW,EAC/CC,EAAc,SAAS,eAAe,aAAa,EAErDD,IACFA,EAAU,iBAAiB,aAAcjB,GAAS,CAChDA,EAAM,eAAc,EACpBA,EAAM,gBAAe,EACrB,KAAK,kBAAoB,CAAE,OAAQ,EAAI,CACzC,CAAC,EAEDiB,EAAU,iBAAiB,WAAYjB,GAAS,CAC9CA,EAAM,eAAc,EACpBA,EAAM,gBAAe,EACrB,KAAK,kBAAoB,CAAE,OAAQ,EAAK,CAC1C,CAAC,GAGCkB,IACFA,EAAY,iBAAiB,aAAclB,GAAS,CAClDA,EAAM,eAAc,EACpBA,EAAM,gBAAe,EACrB,KAAK,kBAAoB,CAAE,SAAU,EAAI,CAC3C,CAAC,EAEDkB,EAAY,iBAAiB,WAAYlB,GAAS,CAChDA,EAAM,eAAc,EACpBA,EAAM,gBAAe,EACrB,KAAK,kBAAoB,CAAE,SAAU,EAAK,CAC5C,CAAC,GAIH,KAAK,kBAAoB,CAAE,OAAQ,GAAO,SAAU,EAAK,CAC3D,CAEA,gBAAiB,CACf,KAAK,OAAO,OAAS,OAAO,WAAa,OAAO,YAChD,KAAK,OAAO,uBAAsB,EAClC,KAAK,SAAS,QAAQ,OAAO,WAAY,OAAO,WAAW,CAC7D,CAEA,UAAUA,EAAO,CAIf,OAAQA,EAAM,KAAI,CAChB,IAAK,UACL,IAAK,OACH,KAAK,OAAO,SAAS,GAAK,GAC1B,MACF,IAAK,YACL,IAAK,OACH,KAAK,OAAO,SAAS,GAAK,GAC1B,MACF,IAAK,YACL,IAAK,OACH,KAAK,OAAO,SAAS,GAAK,GAC1B,MACF,IAAK,aACL,IAAK,OACH,KAAK,OAAO,SAAS,GAAK,GAC1B,MACF,IAAK,QACH,KAAK,OAAO,SAAS,GAAK,GAAY,GACtC,MACF,IAAK,YACH,KAAK,OAAO,SAAS,GAAK,GAAY,GACtC,KACR,CAGI,KAAK,aAAY,CACnB,CAEA,cAAe,CAEb,MAAMmB,EAAS,IAAIC,EAAc,EAAG,EAAG,EAAE,EACnCC,EAAiB,KAAK,OAAO,SAAS,MAAK,EAAG,IAAIF,CAAM,EAC9D,KAAK,OAAO,SAAS,KAAKE,EAAgB,EAAG,EAC7C,KAAK,OAAO,OAAO,KAAK,OAAO,QAAQ,CACzC,CAEA,eAAgB,CACd,MAAMC,EAAU,IAAM,CACpB,sBAAsBA,CAAO,EAC7B,KAAK,OAAM,EACX,KAAK,OAAM,CACb,EACAA,EAAO,CACT,CAEA,QAAS,CACF,KAAK,WAKN,KAAK,UAAY,KAAK,oBAEpB,KAAK,kBAAkB,SACzB,KAAK,OAAO,SAAS,GAAK,GAAY,GACtC,KAAK,aAAY,GAEf,KAAK,kBAAkB,WACzB,KAAK,OAAO,SAAS,GAAK,GAAY,GACtC,KAAK,aAAY,IAKrB,KAAK,MAAM,QAAQvB,GAAQ,CACzBA,EAAK,SAAS,GAAKA,EAAK,SAAS,cACjCA,EAAK,SAAS,GAAKA,EAAK,SAAS,cAAgB,EACnD,CAAC,EAGD,KAAK,oBAAmB,EAC1B,CAEA,qBAAsB,CACpB,KAAK,MAAM,QAAQ,CAACA,EAAMwB,IAAU,CACjB,KAAK,OAAO,SAAS,WAAWxB,EAAK,QAAQ,EAC/C,IAEb,KAAK,MAAM,OAAOA,CAAI,EACtB,KAAK,MAAM,OAAOwB,EAAO,CAAC,EAC1B,KAAK,YACL,KAAK,SAAQ,EAEb,QAAQ,IAAI,4BAA4B,YAAK,UAAW,EAGpD,KAAK,MAAM,SAAW,GACxB,KAAK,cAAa,EAGxB,CAAC,CACH,CAEA,eAAgB,CACd,QAAQ,IAAI,oBAAoB,EAChC,KAAK,cAEL,KAAK,kBAAiB,EACtB,KAAK,SAAQ,CACf,CAEA,UAAW,CACT,SAAS,eAAe,WAAW,EAAE,YAAc,KAAK,UACxD,SAAS,eAAe,aAAa,EAAE,YAAc,KAAK,WAC5D,CAEA,QAAS,CACH,KAAK,UAAY,KAAK,OAAS,KAAK,QACtC,KAAK,SAAS,OAAO,KAAK,MAAO,KAAK,MAAM,CAEhD,CAEA,aAAc,CACZ,MAAMC,EAAiB,SAAS,eAAerD,EAAO,SAAS,EAC3DqD,GACFA,EAAe,UAAU,IAAI,QAAQ,CAEzC,CAEA,QAAS,CACP,MAAMC,EAAY,SAAS,eAAetD,EAAO,IAAI,EACjDsD,GACFA,EAAU,UAAU,OAAO,QAAQ,EAErC,KAAK,SAAQ,CACf,CAEA,cAAe,CACb,MAAO,iEAAiE,KACtE,UAAU,SAChB,CACE,CACF,CAGA,OAAO,iBAAiB,mBAAoB,SAAY,CAEtD,MADa,IAAIrD,EAAc,EACpB,WAAU,CACvB,CAAC,EAGD,OAAO,iBAAiB,mBAAoB4B,GAAS,CACnDA,EAAM,eAAc,EACpB,QAAQ,KAAK,oBAAoB,CACnC,CAAC,EAED,OAAO,iBAAiB,uBAAwB,IAAM,CACpD,QAAQ,IAAI,wBAAwB,CAEtC,CAAC"}