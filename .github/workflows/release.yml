name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
        default: 'patch'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Configure Git
      if: github.event_name == 'workflow_dispatch'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
      
    - name: Bump version and create tag
      if: github.event_name == 'workflow_dispatch'
      id: version_bump
      run: |
        # Bump version using npm
        npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
        
        # Get the new version
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "new_version=v${NEW_VERSION}" >> $GITHUB_OUTPUT
        echo "version_number=${NEW_VERSION}" >> $GITHUB_OUTPUT
        
        # Create and push tag
        git add package.json package-lock.json
        git commit -m "Bump version to ${NEW_VERSION}"
        git tag "v${NEW_VERSION}"
        git push origin HEAD
        git push origin "v${NEW_VERSION}"
        
    - name: Get version from tag
      if: github.event_name == 'push'
      id: version_tag
      run: |
        echo "new_version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        echo "version_number=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Run tests
      run: npm test
      
    - name: Build application
      run: npm run build
      
    - name: Set version variables
      id: version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "tag_name=${{ steps.version_bump.outputs.new_version }}" >> $GITHUB_OUTPUT
          echo "version_number=${{ steps.version_bump.outputs.version_number }}" >> $GITHUB_OUTPUT
        else
          echo "tag_name=${{ steps.version_tag.outputs.new_version }}" >> $GITHUB_OUTPUT
          echo "version_number=${{ steps.version_tag.outputs.version_number }}" >> $GITHUB_OUTPUT
        fi
      
    - name: Create changelog
      id: changelog
      run: |
        # Generate changelog from git commits
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          # For manual releases, get changes since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$LAST_TAG" ]; then
            {
              echo "CHANGELOG<<EOF"
              git log ${LAST_TAG}..HEAD --pretty=format:"- %s (%h)"
              echo ""
              echo "EOF"
            } >> $GITHUB_OUTPUT
          else
            echo "CHANGELOG=- Initial release" >> $GITHUB_OUTPUT
          fi
        else
          # For tag releases, use existing logic
          {
            echo "CHANGELOG<<EOF"
            git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"- %s (%h)"
            echo ""
            echo "EOF"
          } >> $GITHUB_OUTPUT
        fi
        
    - name: Create release archive
      run: |
        tar -czf ocean-adventure-${{ steps.version.outputs.tag_name }}.tar.gz dist/
        zip -r ocean-adventure-${{ steps.version.outputs.tag_name }}.zip dist/
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.tag_name }}
        name: Ocean Adventure ${{ steps.version.outputs.tag_name }}
        body: |
          ## Changes in this Release
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ## Installation
          Download the appropriate archive below and extract it to your web server.
          
          ## System Requirements
          - Modern web browser with WebGL 2.0 support
          - Mobile devices: iOS 13+ Safari, Android Chrome 80+
          - Desktop: Chrome 80+, Firefox 75+, Safari 13+, Edge 80+
          
          ## What's New
          See the [CHANGELOG.md](CHANGELOG.md) for detailed changes.
        draft: false
        prerelease: false
        files: |
          ocean-adventure-${{ steps.version.outputs.tag_name }}.tar.gz
          ocean-adventure-${{ steps.version.outputs.tag_name }}.zip